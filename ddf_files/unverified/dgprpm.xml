<?xml version="1.0"?>
<APC_DDF xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="apc_ddf_1_6.xsd"
         ddfid="dgprpm" ddfname="Digipower DGP RPM" ddfversion="2" canremove="yes">
	<schemaVersion>1.6</schemaVersion>
	<device deviceid="mib2ifstate">
		<oidMustExist oid=".1.3.6.1.4.1.17420.1.1.3.2.1.1.0"/>
		
		
		<!-- rpmOutletNumber -->
    <numSensor ruleid="rpmOutletNumber">
      <type>num</type>
      <sensorId>RPM_OUTLET_NUMBER_</sensorId>
      <value>
        <getOid>.1.3.6.1.4.1.17420.1.1.3.2.1.2.0</getOid>
      </value>
      <label>Rpm Outlet Number </label>
      <sensorSet>RPM outlet</sensorSet>
    </numSensor>
    
    <!-- rpmOutletState -->
    <!--Getting this OID will cause the status of all outlets to be
       returned. This OID is provided for informational purposes only.
       The format of the data returned is a character string consisting of a character from '0' to '3'.
       '0' if the outlet is off.
       '1' if the outlet is on.
       '2' if the outlet is in shutdown pending state.
       '3' if the outlet is fault.
       A comma character will delimit each outlet entry in the string.
      For exampe:
       If the returned string is '1,2,0,3', it means the iSwith has 4 outlets and
       the outlets status are the following:
       outlet 1 is on,
       outlet 2 is in shutdown pending state,
       outlet 3 is off,
       outlet 4 is fault. 
    <numSensor ruleid="rpmOutletState">
      <type>String</type>
      <sensorId>RPM_OUTLET_STATE_</sensorId>
      <value>
        <getOid>.1.3.6.1.4.1.17420.1.1.3.2.1.3.0</getOid>
      </value>
      <label>Rpm Outlet State</label>
      <sensorSet>RPM outlet</sensorSet>
    </numSensor>-->
    
    
    
    <!-- rpmControlType -->
    <!--Getting this OID will cause the status of all outlets to be
       returned. 
       The format of the data returned is a character string consisting of a character from '0' to '2'.
       '0' if the outlet is instant shutdown.
       '1' if the outlet is safe shutdown.
       '2' if the outlet is safe reboot.
       A comma character will delimit each outlet entry in the string.
      For exampe:
       If the returned string is '1,2,0,1', it means the iSwith has 4 outlets and
       the outlets status are the following:
       outlet 1 is safe shutdown,
       outlet 2 is safe reboot,
       outlet 3 is instant shutdown,
       outlet 4 is safe shutdown. 
       
    <numSensor ruleid="rpmControlType">
      <type>String</type>
      <sensorId>RPM_CONTROL_TYPE_</sensorId>
      <value>
        <getOid>.1.3.6.1.4.1.17420.1.1.3.2.1.4.0</getOid>
      </value>
      <label>Rpm Control Type</label>
      <sensorSet>RPM outlet</sensorSet>
    </numSensor>-->
    
    <!-- rpmInternetLocal -->
    <!--Getting this OID will cause the status of all outlets to be
       returned. 
       The format of the data returned is a character string consisting of a character from '0' to '1'.
       '0' if the outlet is Internet.
       '1' if the outlet is Local.
       A comma character will delimit each outlet entry in the string.
      For exampe:
       If the returned string is '1,1,0,1', it means the iSwith has 4 outlets and
       the outlets status are the following:
       outlet 1 is Local,
       outlet 2 is Local,
       outlet 3 is Internet,
       outlet 4 is Local.
    <numSensor ruleid="rpmInternetLocal">
      <type>String</type>
      <sensorId>RPM_INTERNET_LOCAL_</sensorId>
      <value>
        <getOid>.1.3.6.1.4.1.17420.1.1.3.2.1.5.0</getOid>
      </value>
      <label>Rpm Internet Local</label>
      <sensorSet>RPM outlet</sensorSet>
    </numSensor>-->
    
 
    <!-- cpsNumber -->
    <numSensor ruleid="cpsNumber">
      <type>num</type>
      <sensorId>CPS_NUMBER_</sensorId>
      <value>
        <getOid>.1.3.6.1.4.1.17420.1.1.4.1.0</getOid>
      </value>
      <label>CPS Number </label>
      <sensorSet>cps </sensorSet>
    </numSensor>
    
    <!-- cpsValue -->
    <numSensor ruleid="cpsValue" index=".1.3.6.1.4.1.17420.1.1.4.2.1.1">
      <type>amperage</type>
      <sensorId>CPS_Value_<rowIndex/></sensorId>
      <value>
        <getRowOid>.1.3.6.1.4.1.17420.1.1.4.2.1.2</getRowOid>
      </value>
      <label>CPS Value <rowIndex/></label>
      <sensorSet>cps<rowIndex/></sensorSet>
    </numSensor>
    
     <!--cpsThreshold1 -->
 	 	<stateSensor ruleid="cpsThreshold1" index=".1.3.6.1.4.1.17420.1.1.4.2.1.1">
      <type>state</type>
      <sensorId>CPS_THRESHOLD1_<rowIndex/></sensorId>
      <value>
        <getRowOid>.1.3.6.1.4.1.17420.1.1.4.2.1.3</getRowOid>
      </value>
      <label>CPS threshold1-- <rowIndex/></label>
      <enum>cpsThreshold-em</enum>
      <sensorSet>cps<rowIndex/></sensorSet>
    </stateSensor>
    
     <!--cpsThreshold2 -->
 	 	<stateSensor ruleid="cpsThreshold2" index=".1.3.6.1.4.1.17420.1.1.4.2.1.1">
      <type>state</type>
      <sensorId>CPS_THRESHOLD2_<rowIndex/></sensorId>
      <value>
        <getRowOid>.1.3.6.1.4.1.17420.1.1.4.2.1.4</getRowOid>
      </value>
      <label>CPS threshold2-- <rowIndex/></label>
      <enum>cpsThreshold-em</enum>
      <sensorSet>cps<rowIndex/></sensorSet>
    </stateSensor>    
    
    <enumMap ruleid="cpsThreshold-em">
      <label>Alarm</label>
      <label>Normal</label>
	 </enumMap>
	 
	 <!--atsStatus -->
 	 	<stateSensor ruleid="atsStatus">
      <type>state</type>
      <sensorId>ATS_STATUS_</sensorId>
      <value>
        <getOid>.1.3.6.1.4.1.17420.1.1.5.5.0</getOid>
      </value>
      <label>ATS Status</label>
      <enum>atsStatus-em</enum>
      <sensorSet>ats</sensorSet>
    </stateSensor>    
    
    <enumMap ruleid="atsStatus-em">
      <label>None</label>
      <label>A</label>
      <label>B</label>
	 </enumMap>
	 
	 
    </device>  
</APC_DDF>