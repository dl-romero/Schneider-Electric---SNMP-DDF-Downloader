<?xml version="1.0"?>
<!-- NMC 1.x firmware DDF for SNMP scanners : rules to populate FW version info to facilitate
     FW update functionality.  It must be extracted from sysDescr based on fixed expected positions
     within string. ex:
     "APC Web/SNMP Management Card (MB:v3.4.4 PF:v1.2.0 PN:apc_hw02_aos_120.bin AF1:v1.2.0 AN1:apc_hw02_sumx_120.bin......"
     Separate from core DDF since pre ISXC 5 does not have FW update but does have bug with if tag processing.
     So we have option of not applying this DDF to those versions.
    -->
<APC_DDF xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd"
         ddfid="apcnmc1x" ddfname="APC NMC 1.x" ddfversion="2">
	<schemaVersion>1.6</schemaVersion>
	
	<!-- APC 1.x firmware versions from sysDescr -->
	<device deviceid="apcsysdescrfw">
		<!-- Make sure its not a newer NMC from which we can simply get fw info from fw table -->
		<oidMustNotExist ruleid="fwtablecount" oid=".1.3.6.1.4.1.318.1.4.2.3.0" />
		<!-- Make sure its an NMC and not just some other product -->
		<oidMustMatch ruleid="nmcsysdescrprefix" oid=".1.3.6.1.2.1.1.1.0" >
			<valueList>
				<value>APC Web/SNMP Management Card*</value>
			</valueList>
		</oidMustMatch>
		
		<!-- Add firmware version from sysDescr -->
		
		<!-- aos version can be 6 or 8 chars -->
		<setProductData ruleid="bootversion" field="bootversion">
			<if>
				<op><eqString><op>PN:</op><op><substring start="50" end="53"><getOid>.1.3.6.1.2.1.1.1.0</getOid></substring></op></eqString></op>
				<!-- 6 chars, like v1.2.0 -->
				<op><substring start="43" end="49"><getOid>.1.3.6.1.2.1.1.1.0</getOid></substring></op>
				<!-- assume 8 chars, like v1.2.0.q -->
				<op><substring start="43" end="51"><getOid>.1.3.6.1.2.1.1.1.0</getOid></substring></op>
			</if>
		</setProductData>

		<!-- aos name can be 20 or 21 chars. position affected by aos version length -->
		<setProductData ruleid="apcaosversion" field="apcaosversion">
			<if>
				<op><eqString><op>PN:</op><op><substring start="50" end="53"><getOid>.1.3.6.1.2.1.1.1.0</getOid></substring></op></eqString></op>
				<!-- version 6 chars, like v1.2.0 so corresponding name is 20 chars, like apc_hw02_aos_120.bin -->
				<op><substring start="53" end="73"><getOid>.1.3.6.1.2.1.1.1.0</getOid></substring></op>
				<!-- assume version 8 chars, like v1.2.0.q so corresponding name is 21 chars, like apc_hw02_aos_120q.bin -->
				<!-- shift start pos 2 and copy 1 more -->
				<op><substring start="55" end="76"><getOid>.1.3.6.1.2.1.1.1.0</getOid></substring></op>
			</if>
		</setProductData>

		<!-- app version can be 6 or 8 chars. position affected by aos version and name lengths -->
		<setProductData ruleid="appversion" field="appversion">
			<if>
				<op><eqString><op>PN:</op><op><substring start="50" end="53"><getOid>.1.3.6.1.2.1.1.1.0</getOid></substring></op></eqString></op>
				<!-- aos version 6 chars, like v1.2.0 -->
				<op>
					<if>
						<op><eqString><op>AN1:</op><op><substring start="85" end="89"><getOid>.1.3.6.1.2.1.1.1.0</getOid></substring></op></eqString></op>
						<!-- app version 6 chars also, like v1.2.0 -->
						<op><substring start="78" end="84"><getOid>.1.3.6.1.2.1.1.1.0</getOid></substring></op>
						<op>
							<if>
								<op><eqString><op>AN1:</op><op><substring start="75" end="79"><getOid>.1.3.6.1.2.1.1.1.0</getOid></substring></op></eqString></op>
								<!-- msvm firmware, with shortened aos and app filenames -->
								<op><substring start="68" end="74"><getOid>.1.3.6.1.2.1.1.1.0</getOid></substring></op>
								<!-- app version 8 chars, like v1.2.0.q -->
								<op><substring start="78" end="86"><getOid>.1.3.6.1.2.1.1.1.0</getOid></substring></op>
							</if>
						</op>
					</if>
				</op>
				<!-- aos version 8 chars, like v1.2.0.q, and aos name 21 -->
				<!-- same logic as then clause just shift substring positions +3 -->
				<op>
					<if>
						<op><eqString><op>AN1:</op><op><substring start="88" end="92"><getOid>.1.3.6.1.2.1.1.1.0</getOid></substring></op></eqString></op>
						<!-- app layer version no dev char, like v1.2.0 -->
						<op><substring start="81" end="87"><getOid>.1.3.6.1.2.1.1.1.0</getOid></substring></op>
						<!-- KISS - assume app layer version with dev char, like v1.2.0.q -->
						<op><substring start="81" end="89"><getOid>.1.3.6.1.2.1.1.1.0</getOid></substring></op>
					</if>
				</op>
			</if>
		</setProductData>

		<!-- app name can be 19, 20, 21 or 22 chars. position affected by aos version/name and app version lengths -->
		<!-- app layer abbrev length affects how many chars to copy - find where .bin is -->
		<setProductData ruleid="apcappversion" field="apcappversion">
			<if>
				<op><eqString><op>PN:</op><op><substring start="50" end="53"><getOid>.1.3.6.1.2.1.1.1.0</getOid></substring></op></eqString></op>
				<!-- aos version 6 chars, like v1.2.0 -->
				<op>
					<if>
						<op><eqString><op>AN1:</op><op><substring start="85" end="89"><getOid>.1.3.6.1.2.1.1.1.0</getOid></substring></op></eqString></op>
						<!-- app version 6 chars also -->
						<op>
							<!-- know where to start copying, app layer abbrev length is last variable in how much to copy -->
							<if>
								<op><eqString><op>.bin</op><op><substring start="106" end="110"><getOid>.1.3.6.1.2.1.1.1.0</getOid></substring></op></eqString></op>
								<!-- app layer abbrev is 4 char, like sumx -->
								<op><substring start="89" end="110"><getOid>.1.3.6.1.2.1.1.1.0</getOid></substring></op>
								<op>
									<if>
										<op><eqString><op>.bin</op><op><substring start="105" end="109"><getOid>.1.3.6.1.2.1.1.1.0</getOid></substring></op></eqString></op>
										<!-- app layer abbrev is 3 char, like ats -->
										<op><substring start="89" end="109"><getOid>.1.3.6.1.2.1.1.1.0</getOid></substring></op>
										<op>
											<if>
												<op><eqString><op>.bin</op><op><substring start="104" end="108"><getOid>.1.3.6.1.2.1.1.1.0</getOid></substring></op></eqString></op>
												<!-- app layer abbrev is 2 char, like sy -->
												<op><substring start="89" end="108"><getOid>.1.3.6.1.2.1.1.1.0</getOid></substring></op>
												<op>
												</op>
											</if>
										</op>
									</if>
								</op>
							</if>
						</op>
						<!-- app version 8 chars -->
						<!-- copy start is +2.  copy end is +3 -->
						<op>
							<if>
								<op><eqString><op>.bin</op><op><substring start="109" end="113"><getOid>.1.3.6.1.2.1.1.1.0</getOid></substring></op></eqString></op>
								<!-- app layer abbrev is 4 char, like sumx -->
								<op><substring start="91" end="113"><getOid>.1.3.6.1.2.1.1.1.0</getOid></substring></op>
								<op>
									<if>
										<op><eqString><op>.bin</op><op><substring start="108" end="112"><getOid>.1.3.6.1.2.1.1.1.0</getOid></substring></op></eqString></op>
										<!-- app layer abbrev is 3 char, like ats -->
										<op><substring start="91" end="112"><getOid>.1.3.6.1.2.1.1.1.0</getOid></substring></op>
										<op>
											<if>
												<op><eqString><op>.bin</op><op><substring start="107" end="111"><getOid>.1.3.6.1.2.1.1.1.0</getOid></substring></op></eqString></op>
												<!-- app layer abbrev is 2 char, like sy -->
												<op><substring start="91" end="111"><getOid>.1.3.6.1.2.1.1.1.0</getOid></substring></op>
												<op>
												</op>
											</if>
										</op>
									</if>
								</op>
							</if>
						</op>
					</if>
				</op>
				<!-- else aos version 8 chars all start/end +3 from then clause above-->
				<op>
					<if>
						<op><eqString><op>AN1:</op><op><substring start="88" end="92"><getOid>.1.3.6.1.2.1.1.1.0</getOid></substring></op></eqString></op>
						<!-- app version 6 chars -->
						<op>
							<!-- know where to start copying, app layer abbrev length is last variable in how much to copy -->
							<if>
								<op><eqString><op>.bin</op><op><substring start="109" end="113"><getOid>.1.3.6.1.2.1.1.1.0</getOid></substring></op></eqString></op>
								<!-- app layer abbrev is 4 char, like sumx -->
								<op><substring start="92" end="113"><getOid>.1.3.6.1.2.1.1.1.0</getOid></substring></op>
								<op>
									<if>
										<op><eqString><op>.bin</op><op><substring start="108" end="112"><getOid>.1.3.6.1.2.1.1.1.0</getOid></substring></op></eqString></op>
										<!-- app layer abbrev is 3 char, like ats -->
										<op><substring start="92" end="112"><getOid>.1.3.6.1.2.1.1.1.0</getOid></substring></op>
										<op>
											<if>
												<op><eqString><op>.bin</op><op><substring start="107" end="111"><getOid>.1.3.6.1.2.1.1.1.0</getOid></substring></op></eqString></op>
												<!-- app layer abbrev is 2 char, like sy -->
												<op><substring start="92" end="111"><getOid>.1.3.6.1.2.1.1.1.0</getOid></substring></op>
												<op>
												</op>
											</if>
										</op>
									</if>
								</op>
							</if>
						</op>
						<!-- app version 8 chars also -->
						<!-- copy start is +2.  copy end is +3 -->
						<op>
							<if>
								<op><eqString><op>.bin</op><op><substring start="112" end="116"><getOid>.1.3.6.1.2.1.1.1.0</getOid></substring></op></eqString></op>
								<!-- app layer abbrev is 4 char, like sumx -->
								<op><substring start="94" end="116"><getOid>.1.3.6.1.2.1.1.1.0</getOid></substring></op>
								<op>
									<if>
										<op><eqString><op>.bin</op><op><substring start="111" end="115"><getOid>.1.3.6.1.2.1.1.1.0</getOid></substring></op></eqString></op>
										<!-- app layer abbrev is 3 char, like ats -->
										<op><substring start="94" end="115"><getOid>.1.3.6.1.2.1.1.1.0</getOid></substring></op>
										<op>
											<if>
												<op><eqString><op>.bin</op><op><substring start="110" end="114"><getOid>.1.3.6.1.2.1.1.1.0</getOid></substring></op></eqString></op>
												<!-- app layer abbrev is 2 char, like sy -->
												<op><substring start="94" end="114"><getOid>.1.3.6.1.2.1.1.1.0</getOid></substring></op>
												<op>
												</op>
											</if>
										</op>
									</if>
								</op>
							</if>
						</op>
					</if>
				</op>
			</if>
		</setProductData>
	</device>
	
</APC_DDF>
