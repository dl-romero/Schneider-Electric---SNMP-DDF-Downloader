<?xml version="1.0"?>
<!-- raritan_pdu -->
<APC_DDF xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="apc_ddf_1_6.xsd"
	ddfid="raritan_pdu"
	ddfname="Raritan PDU"
	ddfversion="30"
	canremove="yes">
<schemaVersion>1.6</schemaVersion>

    <!--DDF Headers -->
    <device deviceid="raritan_pdu_header">
        <oidMustExist ruleid="raritan_pdu_header_exist" oid=".1.3.6.1.4.1.13742.4.1.1.1.0"/>

        <!-- App Version -->
        <setProductData ruleid="appversiondata" field="appversion">
            <getOid>.1.3.6.1.4.1.13742.4.1.1.1.0</getOid>
        </setProductData>

        <!-- Serial Number -->
        <setProductData ruleid="serialdata" field="serial_num">
            <getOid>.1.3.6.1.4.1.13742.4.1.1.2.0</getOid>
        </setProductData>

        <!-- Boot Version -->
        <setProductData ruleid="bootversiondata" field="bootversion">
            <getOid>.1.3.6.1.4.1.13742.4.1.1.7.0</getOid>
        </setProductData>

        <!-- Model -->
        <suppressRule ruleid="stompmib2model" suppressid="core/mib2data/modeldata"/>
        <setProductData ruleid="modeldata" field="model">
            <getOid>.1.3.6.1.4.1.13742.4.1.1.12.0</getOid>
        </setProductData>

		<valueMap ruleid="inlineMeter-vm">
            <valueIn>Yes</valueIn><valueOut>Power Meter</valueOut>
            <valueIn>No</valueIn><valueOut>Rack PDU</valueOut>
            <valueIn>*</valueIn><valueOut>Rack PDU</valueOut>
        </valueMap>
        <setProductData ruleid="typedata" field="type">
			<mapValue mapid="inlineMeter-vm">
            <getOid default="No">.1.3.6.1.4.1.13742.4.1.1.35.0</getOid>
			</mapValue>
		</setProductData>

		<valueMap ruleid="inputs-vm">
            <valueIn>1</valueIn><valueOut>1</valueOut>
            <valueIn>3</valueIn><valueOut>3</valueOut>
            <valueIn>4</valueIn><valueOut>3</valueOut>
            <valueIn>*</valueIn><valueOut>1</valueOut>
        </valueMap>
		<setProductData ruleid="in" field="inputphasecount">
			<mapValue mapid="inputs-vm"><getOid>.1.3.6.1.4.1.13742.4.1.4.1.0</getOid></mapValue>
		</setProductData>
		<setProductData ruleid="out" field="outputphasecount">1</setProductData>

    </device>

    <!--DDF Sensors -->
    <device deviceid="raritan_pdu_0utlet">
        <oidMustExist ruleid="raritan_pdu_outlet_exist" oid=".1.3.6.1.4.1.13742.4.1.1.1.0"/>

        <!-- outletOperationalState -->
        <stateSensor ruleid="outletOperationalState" index=".1.3.6.1.4.1.13742.4.1.2.2.1.3">
            <type>state</type>
            <sensorId>_RPDU_OUTLET_STATE_<rowNumber/></sensorId>
            <value>
                <mapValue mapid="outletOperationalState-vm">
                    <getRowOid>.1.3.6.1.4.1.13742.4.1.2.2.1.3</getRowOid>
                </mapValue>
            </value>
            <label><getRowOid>.1.3.6.1.4.1.13742.4.1.2.2.1.2</getRowOid><space/>Operational State</label>
            <enum>outletOperationalState-em</enum>
            <sensorSet><getRowOid>.1.3.6.1.4.1.13742.4.1.2.2.1.2</getRowOid></sensorSet>
        </stateSensor>

        <valueMap ruleid="outletOperationalState-vm">
            <valueIn>-1</valueIn><valueOut>0</valueOut>
            <valueIn>0</valueIn><valueOut>1</valueOut>
            <valueIn>1</valueIn><valueOut>2</valueOut>
            <valueIn>2</valueIn><valueOut>3</valueOut>
            <valueIn>*</valueIn><valueOut>0</valueOut>
        </valueMap>

        <enumMap ruleid="outletOperationalState-em">
            <label>error</label>
            <label>off</label>
            <label>on</label>
            <label>cycling</label>
        </enumMap>

        <!-- outletCurrent -->
        <numSensor ruleid="outletCurrent" index=".1.3.6.1.4.1.13742.4.1.2.2.1.3">
            <type>amperage</type>
            <sensorId>_OUTLET_CURRENT_<rowNumber/></sensorId>
            <value>
                <!-- Convert .001 of units to units.-->
                <mult><op><getRowOid>.1.3.6.1.4.1.13742.4.1.2.2.1.4</getRowOid></op><op>.001</op></mult>
            </value>
            <label><getRowOid>.1.3.6.1.4.1.13742.4.1.2.2.1.2</getRowOid><space/>Current</label>
            <sensorSet><getRowOid>.1.3.6.1.4.1.13742.4.1.2.2.1.2</getRowOid></sensorSet>
        </numSensor>

        <!-- outletMaxCurrent -->
        <numSensor ruleid="outletMaxCurrent" index=".1.3.6.1.4.1.13742.4.1.2.2.1.3">
            <type>amperage</type>
            <sensorId>MAX_OUTLET_CURRENT_<rowNumber/></sensorId>
            <value>
                <!-- Convert .001 of units to units.-->
                <mult><op><getRowOid>.1.3.6.1.4.1.13742.4.1.2.2.1.5</getRowOid></op><op>.001</op></mult>
            </value>
            <label><getRowOid>.1.3.6.1.4.1.13742.4.1.2.2.1.2</getRowOid><space/>Max Current</label>
            <sensorSet><getRowOid>.1.3.6.1.4.1.13742.4.1.2.2.1.2</getRowOid></sensorSet>
        </numSensor>

        <!-- outletVoltage -->
        <numSensor ruleid="outletVoltage" index=".1.3.6.1.4.1.13742.4.1.2.2.1.2">
            <type>voltage</type>
            <sensorId>OUTLET_VOLTAGE_<rowIndex/></sensorId>
            <value>
                <!-- Convert .001 of units to units.-->
                <mult><op><getRowOid>.1.3.6.1.4.1.13742.4.1.2.2.1.6</getRowOid></op><op>.001</op></mult>
            </value>
            <label><getRowOid>.1.3.6.1.4.1.13742.4.1.2.2.1.2</getRowOid><space/>Voltage</label>
            <sensorSet><getRowOid>.1.3.6.1.4.1.13742.4.1.2.2.1.2</getRowOid></sensorSet>
        </numSensor>

        <!-- outletActivePower -->
        <numSensor ruleid="outletActivePower" index=".1.3.6.1.4.1.13742.4.1.2.2.1.3">
            <type>powerW</type>
            <sensorId>OUTLET_ACTIVE_POWER_<rowIndex/></sensorId>
            <value>
                <getRowOid>.1.3.6.1.4.1.13742.4.1.2.2.1.7</getRowOid>
            </value>
            <label><getRowOid>.1.3.6.1.4.1.13742.4.1.2.2.1.2</getRowOid><space/>Active Power</label>
            <sensorSet><getRowOid>.1.3.6.1.4.1.13742.4.1.2.2.1.2</getRowOid></sensorSet>
        </numSensor>

        <!-- outletApparentPower -->
        <numSensor ruleid="outletApparentPower" index=".1.3.6.1.4.1.13742.4.1.2.2.1.3">
            <type>powerVA</type>
            <sensorId>OUTLET_APPARENT_POWER_<rowIndex/></sensorId>
            <value>
                <getRowOid>.1.3.6.1.4.1.13742.4.1.2.2.1.8</getRowOid>
            </value>
            <label><getRowOid>.1.3.6.1.4.1.13742.4.1.2.2.1.2</getRowOid><space/>Apparent Power</label>
            <sensorSet><getRowOid>.1.3.6.1.4.1.13742.4.1.2.2.1.2</getRowOid></sensorSet>
        </numSensor>

        <!-- outletPowerFactor -->
        <numSensor ruleid="outletPowerFactor" index=".1.3.6.1.4.1.13742.4.1.2.2.1.3">
            <type>powerfactor</type>
            <sensorId>OUTLET_POWER_FACTOR_<rowIndex/></sensorId>
            <value>
                <getRowOid>.1.3.6.1.4.1.13742.4.1.2.2.1.9</getRowOid>
            </value>
            <label><getRowOid>.1.3.6.1.4.1.13742.4.1.2.2.1.2</getRowOid><space/>Power Factor</label>
            <sensorSet><getRowOid>.1.3.6.1.4.1.13742.4.1.2.2.1.2</getRowOid></sensorSet>
        </numSensor>

    </device>
        
    <!--DDF Sensors -->
    <device deviceid="raritan_pdu_unit">
        <oidMustExist ruleid="raritan_pdu_unit_exist" oid=".1.3.6.1.4.1.13742.4.1.1.1.0"/>

        <!-- unitCurrent -->
        <numSensor ruleid="unitCurrent">
            <type>amperage</type>
            <sensorId>UNIT_CURRENT_</sensorId>
            <value>
                <!-- Convert .001 of units to units.-->
                <mult><op><getOid>.1.3.6.1.4.1.13742.4.1.3.1.1.0</getOid></op><op>.001</op></mult>
            </value>
            <label>Unit Current</label>
            <sensorSet>Unit Readings</sensorSet>
        </numSensor>

        <!-- unitVoltage -->
        <numSensor ruleid="unitVoltage">
            <type>voltage</type>
            <sensorId>UNIT_VOLTAGE_</sensorId>
            <value>
                <!-- Convert .001 of units to units.-->
                <mult><op><getOid>.1.3.6.1.4.1.13742.4.1.3.1.2.0</getOid></op><op>.001</op></mult>
            </value>
            <label>Unit Voltage</label>
            <sensorSet>Unit Readings</sensorSet>
        </numSensor>

        <!-- unitActivePower -->
        <numSensor ruleid="unitActivePower">
            <type>powerW</type>
            <sensorId>OUTPUT_POWER_TOTAL</sensorId>
            <value>
                <getOid>.1.3.6.1.4.1.13742.4.1.3.1.3.0</getOid>
            </value>
            <label>Unit Active Power</label>
            <sensorSet>Unit Readings</sensorSet>
        </numSensor>

        <!-- unitApparentPower -->
        <numSensor ruleid="unitApparentPower">
            <type>powerVA</type>
            <sensorId>OUTPUT_APPARENT_POWER_TOTAL</sensorId>
            <value>
                <getOid>.1.3.6.1.4.1.13742.4.1.3.1.4.0</getOid>
            </value>
            <label>Unit Apparent Power</label>
            <sensorSet>Unit Readings</sensorSet>
        </numSensor>

        <!-- unitCpuTemp -->
        <numSensor ruleid="unitCpuTemp">
            <type>temp</type>
            <sensorId>UNIT_CPU_TEMP_</sensorId>
            <value>
            <!-- Convert .1 of units to units.-->
                <mult><op><getOid>.1.3.6.1.4.1.13742.4.1.3.1.5.0</getOid></op><op>.1</op></mult>
            </value>
            <label>Unit CPU Temp</label>
            <sensorSet>Unit Readings</sensorSet>
        </numSensor>
        
        <!-- lineCurrent -->
        <numSensor ruleid="lineCurrent" index=".1.3.6.1.4.1.13742.4.1.4.2.1.3">
            <type>amperage</type>
            <sensorId>LINE_CURRENT_<rowIndex/></sensorId>
            <value>
                <!-- Convert .001 of units to units.-->
                <mult><op><getRowOid>.1.3.6.1.4.1.13742.4.1.4.2.1.3</getRowOid></op><op>.001</op></mult>
            </value>
            <label>Line<space/><getRowOid>.1.3.6.1.4.1.13742.4.1.4.2.1.2</getRowOid><space/>Current</label>
            <sensorSet>Line<space/><getRowOid>.1.3.6.1.4.1.13742.4.1.4.2.1.2</getRowOid></sensorSet>
        </numSensor>
        
        <!-- lineVoltage -->
        <numSensor ruleid="lineVoltage" index=".1.3.6.1.4.1.13742.4.1.6.2.1.3">
            <type>voltage</type>
            <sensorId>LINE_VOLTAGE_<rowIndex/></sensorId>
            <value>
                <!-- Convert .001 of units to units.-->
                <mult><op><getRowOid>.1.3.6.1.4.1.13742.4.1.6.2.1.3</getRowOid></op><op>.001</op></mult>
            </value>
            <label>Line<space/><getRowOid>.1.3.6.1.4.1.13742.4.1.4.2.1.2</getRowOid><space/>Voltage</label>
            <sensorSet>Line<space/><getRowOid>.1.3.6.1.4.1.13742.4.1.6.2.1.2</getRowOid></sensorSet>
        </numSensor>
        
    </device>
        
    <!--DDF Sensors -->
    <device deviceid="raritan_pdu_circuit">
        <oidMustExist ruleid="raritan_pdu_circuit_exist" oid=".1.3.6.1.4.1.13742.4.1.1.1.0"/>

        <!-- circuitBreakerState -->
        <stateSensor ruleid="circuitBreakerState" index=".1.3.6.1.4.1.13742.4.1.5.2.1.3">
            <type>state</type>
            <sensorId>CIRCUIT_BREAKER_STATE_<rowIndex/></sensorId>
            <value>
                <mapValue mapid="circuitBreakerState-vm">
                    <getRowOid>.1.3.6.1.4.1.13742.4.1.5.2.1.3</getRowOid>
                </mapValue>
            </value>
            <label><getRowOid>.1.3.6.1.4.1.13742.4.1.5.2.1.2</getRowOid><space/>Circuit Breaker State</label>
            <enum>circuitBreakerState-em</enum>
            <sensorSet><getRowOid>.1.3.6.1.4.1.13742.4.1.5.2.1.2</getRowOid></sensorSet>
        </stateSensor>

        <valueMap ruleid="circuitBreakerState-vm">
            <valueIn>0</valueIn><valueOut>0</valueOut>
            <valueIn>1</valueIn><valueOut>1</valueOut>
            <valueIn>*</valueIn><valueOut>0</valueOut>
        </valueMap>

        <enumMap ruleid="circuitBreakerState-em">
            <label>OK</label>
            <label>Tripped</label>
        </enumMap>

        <!-- circuitBreakerCurrent -->
        <numSensor ruleid="circuitBreakerCurrent" index=".1.3.6.1.4.1.13742.4.1.5.2.1.3">
            <type>amperage</type>
            <sensorId>CIRCUIT_BREAKER_CURRENT_<rowIndex/></sensorId>
            <value>
                <!-- Convert .001 of units to units.-->
                <mult><op><getRowOid>.1.3.6.1.4.1.13742.4.1.5.2.1.5</getRowOid></op><op>.001</op></mult>
            </value>
            <label><getRowOid>.1.3.6.1.4.1.13742.4.1.5.2.1.2</getRowOid><space/>Circuit Breaker Current</label>
            <sensorSet><getRowOid>.1.3.6.1.4.1.13742.4.1.5.2.1.2</getRowOid></sensorSet>
        </numSensor>
        
        <!-- temperature -->
        <numSensor ruleid="temperature" index=".1.3.6.1.4.1.13742.4.2.2.1.3">
            <type>temp</type>
            <sensorId>TEMPERATURE_<rowIndex/></sensorId>
            <value>
                <!-- Convert .1 of units to units.-->
                <mult><op><getRowOid>.1.3.6.1.4.1.13742.4.2.2.1.3</getRowOid></op><op>.1</op></mult>
            </value>
            <label>Temperature<space/><rowIndex/></label>
            <sensorSet>Temp Sensor<space/><rowIndex/></sensorSet>
        </numSensor>

        <!-- humidity -->
        <numSensor ruleid="humidity" index=".1.3.6.1.4.1.13742.4.2.4.1.3">
            <type>humidity</type>
            <sensorId>HUMIDITY_<rowIndex/></sensorId>
            <value>
                <getRowOid>.1.3.6.1.4.1.13742.4.2.4.1.3</getRowOid>
            </value>
            <label>Humidity<space/><rowIndex/></label>
            <sensorSet>Humidity Sensor<space/><rowIndex/></sensorSet>
        </numSensor>

    </device>

    <device deviceid="raritan_pdu_inlet">
        <oidMustExist ruleid="raritan_pdu_inlet_exist" oid=".1.3.6.1.4.1.13742.4.1.20" istree="yes" />

        <numSensor ruleid="inletCurrentRating" index=".1.3.6.1.4.1.13742.4.1.20.2.1.4">
            <type>amperage</type>
            <sensorId>INLET_CURRENT_RATING_<rowIndex/></sensorId>
            <value>
				<mult>
                <op><getRowOid>.1.3.6.1.4.1.13742.4.1.20.2.1.4</getRowOid></op>
				<op>0.001</op>
				</mult>
            </value>
			<valueInc>0.001</valueInc>
            <label>Inlet <getRowOid>.1.3.6.1.4.1.13742.4.1.20.2.1.1</getRowOid> Current Rating</label>
            <sensorSet>Inlet <getRowOid>.1.3.6.1.4.1.13742.4.1.20.2.1.1</getRowOid></sensorSet>
        </numSensor>
        <numSensor ruleid="inletCurrent" index=".1.3.6.1.4.1.13742.4.1.20.2.1.7">
            <type>amperage</type>
            <sensorId>INLET_CURRENT_<rowIndex/></sensorId>
            <value>
				<mult>
                <op><getRowOid>.1.3.6.1.4.1.13742.4.1.20.2.1.7</getRowOid></op>
				<op>0.001</op>
				</mult>
            </value>
			<valueInc>0.001</valueInc>
            <label>Inlet <getRowOid>.1.3.6.1.4.1.13742.4.1.20.2.1.1</getRowOid> Current</label>
            <sensorSet>Inlet <getRowOid>.1.3.6.1.4.1.13742.4.1.20.2.1.1</getRowOid></sensorSet>
        </numSensor>
        <numSensor ruleid="inletVoltage" index=".1.3.6.1.4.1.13742.4.1.20.2.1.8">
            <type>voltage</type>
            <sensorId>OUTPUT_VOLTAGE_<rowIndex/></sensorId>
            <value>
				<mult>
                <op><getRowOid>.1.3.6.1.4.1.13742.4.1.20.2.1.8</getRowOid></op>
				<op>0.001</op>
				</mult>
            </value>
			<valueInc>0.001</valueInc>
            <label>Inlet <getRowOid>.1.3.6.1.4.1.13742.4.1.20.2.1.1</getRowOid> Voltage</label>
            <sensorSet>Inlet <getRowOid>.1.3.6.1.4.1.13742.4.1.20.2.1.1</getRowOid></sensorSet>
        </numSensor>
        <numSensor ruleid="inletActivePower" index=".1.3.6.1.4.1.13742.4.1.20.2.1.9">
            <type>powerW</type>
            <sensorId>INLET_ACTIVE_POWER_<rowIndex/></sensorId>
            <value>
				<getRowOid>.1.3.6.1.4.1.13742.4.1.20.2.1.9</getRowOid>
            </value>
			<valueInc>1</valueInc>
            <label>Inlet <getRowOid>.1.3.6.1.4.1.13742.4.1.20.2.1.1</getRowOid> Active Power</label>
            <sensorSet>Inlet <getRowOid>.1.3.6.1.4.1.13742.4.1.20.2.1.1</getRowOid></sensorSet>
        </numSensor>
        <numSensor ruleid="inletApparentPower" index=".1.3.6.1.4.1.13742.4.1.20.2.1.10">
            <type>powerVA</type>
            <sensorId>INLET_APPARENT_POWER_<rowIndex/></sensorId>
            <value>
				<getRowOid>.1.3.6.1.4.1.13742.4.1.20.2.1.10</getRowOid>
            </value>
			<valueInc>1</valueInc>
            <label>Inlet <getRowOid>.1.3.6.1.4.1.13742.4.1.20.2.1.1</getRowOid> Apparent Power</label>
            <sensorSet>Inlet <getRowOid>.1.3.6.1.4.1.13742.4.1.20.2.1.1</getRowOid></sensorSet>
        </numSensor>
        <numSensor ruleid="inletPowerFactor" index=".1.3.6.1.4.1.13742.4.1.20.2.1.11">
            <type>num/powerfactor</type>
            <sensorId>INLET_POWER_FACTOR_<rowIndex/></sensorId>
            <value>
				<mult>
                <op><getRowOid>.1.3.6.1.4.1.13742.4.1.20.2.1.11</getRowOid></op>
				<op>0.01</op>
				</mult>
            </value>
			<valueInc>0.01</valueInc>
            <label>Inlet <getRowOid>.1.3.6.1.4.1.13742.4.1.20.2.1.1</getRowOid> Power Factor</label>
            <sensorSet>Inlet <getRowOid>.1.3.6.1.4.1.13742.4.1.20.2.1.1</getRowOid></sensorSet>
        </numSensor>
        <numSensor ruleid="inletActiveEnergy" index=".1.3.6.1.4.1.13742.4.1.20.2.1.12">
            <type>num/kwatthr</type>
            <sensorId>INLET_ACTIVE_ENERGY_<rowIndex/></sensorId>
            <value>
				<mult>
                <op><getRowOid>.1.3.6.1.4.1.13742.4.1.20.2.1.12</getRowOid></op>
				<op>0.001</op>
				</mult>
            </value>
			<valueInc>0.001</valueInc>
            <label>Inlet <getRowOid>.1.3.6.1.4.1.13742.4.1.20.2.1.1</getRowOid> Active Energy</label>
            <sensorSet>Inlet <getRowOid>.1.3.6.1.4.1.13742.4.1.20.2.1.1</getRowOid></sensorSet>
        </numSensor>

        <numSensor ruleid="inletPoleCurrent" index=".1.3.6.1.4.1.13742.4.1.21.2.1.3">
            <type>amperage</type>
            <sensorId>INLET_POLE_CURRENT_<rowIndex/></sensorId>
            <value>
				<mult>
                <op><getRowOid>.1.3.6.1.4.1.13742.4.1.21.2.1.3</getRowOid></op>
				<op>0.001</op>
				</mult>
            </value>
			<valueInc>0.001</valueInc>
            <label>
				Inlet<space/>
				<regex><op>(\d+)\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex><space/>
				<getRowOid>.1.3.6.1.4.1.13742.4.1.21.2.1.2</getRowOid><space/>
				Current
			</label>
            <sensorSet>
				Inlet<space/>
				<regex><op>(\d+)\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex><space/>
				<getRowOid>.1.3.6.1.4.1.13742.4.1.21.2.1.2</getRowOid><space/>
			</sensorSet>
        </numSensor>
        <numSensor ruleid="inletPoleMaxCurrent" index=".1.3.6.1.4.1.13742.4.1.21.2.1.5">
            <type>amperage</type>
            <sensorId>INLET_POLE_MAX_CURRENT_<rowIndex/></sensorId>
            <value>
				<mult>
                <op><getRowOid>.1.3.6.1.4.1.13742.4.1.21.2.1.5</getRowOid></op>
				<op>0.001</op>
				</mult>
            </value>
			<valueInc>0.001</valueInc>
            <label>
				Inlet<space/>
				<regex><op>(\d+)\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex><space/>
				<getRowOid>.1.3.6.1.4.1.13742.4.1.21.2.1.2</getRowOid><space/>
				Max Current
			</label>
            <sensorSet>
				Inlet<space/>
				<regex><op>(\d+)\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex><space/>
				<getRowOid>.1.3.6.1.4.1.13742.4.1.21.2.1.2</getRowOid><space/>
			</sensorSet>
        </numSensor>
        <numSensor ruleid="inletPoleVoltage" index=".1.3.6.1.4.1.13742.4.1.21.2.1.4">
            <type>voltage</type>
            <sensorId>INLET_POLE_VOLTAGE_<rowIndex/></sensorId>
            <value>
				<mult>
                <op><getRowOid>.1.3.6.1.4.1.13742.4.1.21.2.1.4</getRowOid></op>
				<op>0.001</op>
				</mult>
            </value>
			<valueInc>0.001</valueInc>
            <label>
				Inlet<space/>
				<regex><op>(\d+)\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex><space/>
				<getRowOid>.1.3.6.1.4.1.13742.4.1.21.2.1.2</getRowOid><space/>
				Voltage
			</label>
            <sensorSet>
				Inlet<space/>
				<regex><op>(\d+)\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex><space/>
				<getRowOid>.1.3.6.1.4.1.13742.4.1.21.2.1.2</getRowOid><space/>
			</sensorSet>
        </numSensor>
        <numSensor ruleid="inletPoleActivePower" index=".1.3.6.1.4.1.13742.4.1.21.2.1.7">
            <type>powerW</type>
            <sensorId>INLET_POLE_ACTIVE_POWER_<rowIndex/></sensorId>
            <value>
				<getRowOid>.1.3.6.1.4.1.13742.4.1.21.2.1.7</getRowOid>
            </value>
			<valueInc>1</valueInc>
            <label>
				Inlet<space/>
				<regex><op>(\d+)\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex><space/>
				<getRowOid>.1.3.6.1.4.1.13742.4.1.21.2.1.2</getRowOid><space/>
				Active Power
			</label>
            <sensorSet>
				Inlet<space/>
				<regex><op>(\d+)\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex><space/>
				<getRowOid>.1.3.6.1.4.1.13742.4.1.21.2.1.2</getRowOid><space/>
			</sensorSet>
        </numSensor>
        <numSensor ruleid="inletPoleApparentPower" index=".1.3.6.1.4.1.13742.4.1.21.2.1.8">
            <type>powerVA</type>
            <sensorId>INLET_POLE_APPARENT_POWER_<rowIndex/></sensorId>
            <value>
				<getRowOid>.1.3.6.1.4.1.13742.4.1.21.2.1.8</getRowOid>
            </value>
			<valueInc>1</valueInc>
            <label>
				Inlet<space/>
				<regex><op>(\d+)\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex><space/>
				<getRowOid>.1.3.6.1.4.1.13742.4.1.21.2.1.2</getRowOid><space/>
				Apparent Power
			</label>
            <sensorSet>
				Inlet<space/>
				<regex><op>(\d+)\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex><space/>
				<getRowOid>.1.3.6.1.4.1.13742.4.1.21.2.1.2</getRowOid><space/>
			</sensorSet>
        </numSensor>
        <numSensor ruleid="inletPolePowerFactor" index=".1.3.6.1.4.1.13742.4.1.21.2.1.9">
            <type>num/powerfactor</type>
            <sensorId>INLET_POLE_POWER_FACTOR_<rowIndex/></sensorId>
            <value>
				<mult>
                <op><getRowOid>.1.3.6.1.4.1.13742.4.1.21.2.1.9</getRowOid></op>
				<op>0.01</op>
				</mult>
            </value>
			<valueInc>0.01</valueInc>
            <label>
				Inlet<space/>
				<regex><op>(\d+)\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex><space/>
				<getRowOid>.1.3.6.1.4.1.13742.4.1.21.2.1.2</getRowOid><space/>
				Power Factor
			</label>
            <sensorSet>
				Inlet<space/>
				<regex><op>(\d+)\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex><space/>
				<getRowOid>.1.3.6.1.4.1.13742.4.1.21.2.1.2</getRowOid><space/>
			</sensorSet>
        </numSensor>
        <numSensor ruleid="inletPoleActiveEnergy" index=".1.3.6.1.4.1.13742.4.1.21.2.1.11">
            <type>num/kwatthr</type>
            <sensorId>INLET_POLE_ACTIVE_ENERGY_<rowIndex/></sensorId>
            <value>
				<mult>
                <op><getRowOid>.1.3.6.1.4.1.13742.4.1.21.2.1.11</getRowOid></op>
				<op>0.001</op>
				</mult>
            </value>
			<valueInc>0.001</valueInc>
            <label>
				Inlet<space/>
				<regex><op>(\d+)\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex><space/>
				<getRowOid>.1.3.6.1.4.1.13742.4.1.21.2.1.2</getRowOid><space/>
				Active Energy
			</label>
            <sensorSet>
				Inlet<space/>
				<regex><op>(\d+)\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex><space/>
				<getRowOid>.1.3.6.1.4.1.13742.4.1.21.2.1.2</getRowOid><space/>
			</sensorSet>
        </numSensor>

    </device>

	
	<device deviceid="raritan_pdu2">
	
		<!-- iso.org.dod.internet.private.enterprises.raritan.pdu2 = '1.3.6.1.4.1.13742.6' -->
		<oidMustExist ruleid="raritan_pdu2_detect" oid=".1.3.6.1.4.1.13742.6" istree="yes" />

        <setProductData ruleid="typedata" field="type">
			<mapValue mapid="deviceType-vm">
            <getOid default="0">.1.3.6.1.4.1.13742.6.3.2.2.1.67.1</getOid>
			</mapValue>
        </setProductData>

        <setProductData ruleid="vendordata" field="vendor">
            <getOid>.1.3.6.1.4.1.13742.6.3.2.1.1.2.1</getOid>
        </setProductData>
        <setProductData ruleid="modeldata" field="model">
            <getOid>.1.3.6.1.4.1.13742.6.3.2.1.1.3.1</getOid>
        </setProductData>
        <setProductData ruleid="serialdata" field="serial_num">
            <getOid>.1.3.6.1.4.1.13742.6.3.2.1.1.4.1</getOid>
        </setProductData>
        <setProductData ruleid="macdata" field="mac_addr">
            <getOid>.1.3.6.1.4.1.13742.6.3.2.2.1.11.1</getOid>
        </setProductData>
        <setProductData ruleid="firmwaredata" field="appversion">
            <getOid>.1.3.6.1.4.1.13742.6.3.2.3.1.6.1.1.1</getOid>
        </setProductData>
        <setProductData ruleid="inputs" field="inputphasecount">
            <getOid>.1.3.6.1.4.1.13742.6.3.3.3.1.5.1.1</getOid>
        </setProductData>
        <setProductData ruleid="outputs" field="outputphasecount">3</setProductData>

		<setDefaultLabel>
            <getOid>.1.3.6.1.4.1.13742.6.3.2.2.1.13.1</getOid>
        </setDefaultLabel>
		<!--
			Ok, here we have a funky MIB.  There are only a few sensors definitions.  However, given the way
			the MIB for this device is setup, it is not straight forward.  This device has a couple sensor
			value OIDs.  For each of these value OIDs, there is a unit OID.  Each OID also has a 'sensor type'
			index.  Here 'sensor type' indicates temp, humid, etc.
			
			Below there is a map for botzware sensor types, for mapping the unit OID to a botzware sensor type.  
			There is also a unit map, for mapping the unit OID to a botzware sensor unit (for percent, RPM... 
			that have no sensor type, just a unit).  There are also scaling maps, both for scaling defined by the
			MIB/device, and the scaling necessary to convert the device value to the units expected by botzware.
		-->
		
		<valueMap ruleid="deviceType-vm">
			<valueIn>0</valueIn><valueOut>Rack PDU</valueOut>
			<valueIn>1</valueIn><valueOut>Branch Circuit Monitor</valueOut>
			<valueIn>2</valueIn><valueOut>Transfer Switch</valueOut>
			<valueIn>*</valueIn><valueOut>Generic Device</valueOut>
		</valueMap>
		
		<valueMap ruleid="sensorType-vm">
			<valueIn>-1</valueIn><valueOut>num</valueOut> <!-- none -->
			<valueIn>0</valueIn><valueOut>num</valueOut> <!-- other -->
			<valueIn>1</valueIn><valueOut>voltage</valueOut> <!-- volt -->
			<valueIn>2</valueIn><valueOut>amperage</valueOut> <!-- amp -->
			<valueIn>3</valueIn><valueOut>powerW</valueOut> <!-- watt -->
			<valueIn>4</valueIn><valueOut>powerVA</valueOut> <!-- voltamp -->
			<valueIn>5</valueIn><valueOut>num/kdisprealenergy</valueOut> <!-- wattHour -->
			<valueIn>6</valueIn><valueOut>num/kdispappenergy</valueOut> <!-- voltampHour -->
			<valueIn>7</valueIn><valueOut>temp</valueOut> <!-- degreeC -->
			<valueIn>8</valueIn><valueOut>frequency</valueOut> <!-- hertz -->
			<valueIn>9</valueIn><valueOut>num</valueOut> <!-- percent -->
			<valueIn>10</valueIn><valueOut>num</valueOut> <!-- meterpersec -->
			<valueIn>11</valueIn><valueOut>pressure</valueOut> <!-- pascal -->
			<valueIn>12</valueIn><valueOut>pressure</valueOut> <!-- psi -->
			<valueIn>13</valueIn><valueOut>num</valueOut> <!-- g (grams?) -->
			<valueIn>14</valueIn><valueOut>temp</valueOut> <!-- degreeF -->
			<valueIn>15</valueIn><valueOut>num</valueOut> <!-- feet -->
			<valueIn>16</valueIn><valueOut>num</valueOut> <!-- inches -->
			<valueIn>17</valueIn><valueOut>num</valueOut> <!-- cm -->
			<valueIn>18</valueIn><valueOut>num</valueOut> <!-- meters -->
			<valueIn>19</valueIn><valueOut>num</valueOut> <!-- rpm -->
			<valueIn>20</valueIn><valueOut>num</valueOut> <!-- degreesAngle -->
			<valueIn>*</valueIn><valueOut>num</valueOut> <!-- default -->
		</valueMap>

		<!-- botzware sensor units mapped to device units OID values -->
		<valueMap ruleid="sensorUnits-vm">
			<valueIn>9</valueIn><valueOut>percent</valueOut> <!-- percent -->
			<valueIn>10</valueIn><valueOut>meterspermin</valueOut> <!-- meterpersec -->
			<valueIn>11</valueIn><valueOut>pascal</valueOut> <!-- pascal -->
			<valueIn>12</valueIn><valueOut>psi</valueOut> <!-- psi -->
			<valueIn>13</valueIn><valueOut>milligrams</valueOut> <!-- g (grams?) -->
			<valueIn>15</valueIn><valueOut>feet</valueOut> <!-- feet -->
			<valueIn>16</valueIn><valueOut>feet</valueOut> <!-- inches -->
			<valueIn>17</valueIn><valueOut>meters</valueOut> <!-- cm -->
			<valueIn>18</valueIn><valueOut>meters</valueOut> <!-- meters -->
			<valueIn>19</valueIn><valueOut>rpm</valueOut> <!-- rpm -->
			<valueIn>20</valueIn><valueOut>degreesAngle</valueOut> <!-- degreesAngle -->
			<valueIn>*</valueIn><valueOut>unknown</valueOut> <!-- default -->
		</valueMap>

		<!-- subtraction operations mapped to device units OID values -->
		<valueMap ruleid="sensorSubtract-vm">
			<valueIn>14</valueIn><valueOut>32</valueOut> <!-- degreeF -->
			<valueIn>*</valueIn><valueOut>0</valueOut> <!-- default -->
		</valueMap>

		<!-- multiplication operations mapped to device units OID values -->
		<valueMap ruleid="sensorMultiply-vm">
			<valueIn>10</valueIn><valueOut>60</valueOut> <!-- meterpersec -->
			<valueIn>11</valueIn><valueOut>0.001</valueOut> <!-- pascal -->
			<valueIn>13</valueIn><valueOut>1000</valueOut> <!-- g (grams?) -->
			<valueIn>14</valueIn><valueOut>0.556</valueOut> <!-- degreeF -->
			<valueIn>16</valueIn><valueOut>0.083</valueOut> <!-- inches -->
			<valueIn>17</valueIn><valueOut>0.01</valueOut> <!-- cm -->
			<valueIn>*</valueIn><valueOut>1</valueOut> <!-- default -->
		</valueMap>

		<!-- 
			decimal count to scaling multiplier; 
			the device supplies the # of decimals for each value 
		-->
		<valueMap ruleid="sensorScaling-vm">
			<valueIn>0</valueIn><valueOut>1</valueOut> 
			<valueIn>1</valueIn><valueOut>0.1</valueOut> 
			<valueIn>2</valueIn><valueOut>0.01</valueOut> 
			<valueIn>3</valueIn><valueOut>0.001</valueOut> 
			<valueIn>4</valueIn><valueOut>0.0001</valueOut> 
			<valueIn>5</valueIn><valueOut>0.00001</valueOut> 
			<valueIn>*</valueIn><valueOut>1</valueOut> 
		</valueMap>

		<!-- 
			each sensor value OID has a isAvailable OID which uses
			a 'TruthValue' syntax; mapping below
		-->
		<valueMap ruleid="isSensorAvailable-vm">
			<valueIn>1</valueIn><valueOut>[true]</valueOut>
			<valueIn>*</valueIn><valueOut>[false]</valueOut>
		</valueMap>
		
		<!-- 
			the OID indexes used are pduID, outletID, and sensorType; 
			the appropriate label for sensorTypeIndex of the OIDs is
			mapped below 
		-->
		<valueMap ruleid="sensorTypeIndex-vm">
			<valueIn>1</valueIn><valueOut>RMS Current</valueOut> 
			<valueIn>2</valueIn><valueOut>Peak Current</valueOut> 
			<valueIn>3</valueIn><valueOut>Unbalanced Current</valueOut> 
			<valueIn>4</valueIn><valueOut>RMS Voltage</valueOut> 
			<valueIn>5</valueIn><valueOut>Active Power</valueOut>
			<valueIn>6</valueIn><valueOut>Apparent Power</valueOut> 
			<valueIn>7</valueIn><valueOut>Power Factor</valueOut> 
			<valueIn>8</valueIn><valueOut>Active Energy</valueOut> 
			<valueIn>9</valueIn><valueOut>Apparent Energy</valueOut> 
			<valueIn>10</valueIn><valueOut>Temperature</valueOut> 
			<valueIn>11</valueIn><valueOut>Humidity</valueOut> 
			<valueIn>12</valueIn><valueOut>Air Flow</valueOut> 
			<valueIn>13</valueIn><valueOut>Air Pressure</valueOut> 
			<valueIn>14</valueIn><valueOut>On-Off</valueOut> 
			<valueIn>15</valueIn><valueOut>Trip</valueOut> 
			<valueIn>16</valueIn><valueOut>Vibration</valueOut> 
			<valueIn>17</valueIn><valueOut>Water Detection</valueOut> 
			<valueIn>18</valueIn><valueOut>Smoke Detection</valueOut>
			<valueIn>19</valueIn><valueOut>Binary</valueOut> 
			<valueIn>20</valueIn><valueOut>Contact</valueOut> 
			<valueIn>21</valueIn><valueOut>Fan Speed</valueOut> 
			<valueIn>22</valueIn><valueOut>Surge Protector Status</valueOut> 
			<valueIn>23</valueIn><valueOut>Frequency</valueOut> 
			<valueIn>24</valueIn><valueOut>Phase Angle</valueOut> 
			<valueIn>25</valueIn><valueOut>RMS Voltage L-N</valueOut> 
			<valueIn>26</valueIn><valueOut>Residual Current</valueOut> 
			<valueIn>27</valueIn><valueOut>RCM State</valueOut> 
			<valueIn>*</valueIn><valueOut>Unknown</valueOut> 
		</valueMap>

		<valueMap ruleid="inletSensorID-vm">
			<valueIn>2</valueIn><valueOut>_TOTAL_BANK_CURRENT</valueOut> 
			<valueIn>3</valueIn><valueOut>_OUTPUT_POWER_TOTAL</valueOut>
			<valueIn>4</valueIn><valueOut>_OUTPUT_APPARENT_POWER_TOTAL</valueOut> 
			<valueIn>5</valueIn><valueOut>_OUTPUT_ENERGY_TOTAL_1</valueOut> 
			<valueIn>*</valueIn><valueOut>_INLET_SENSOR_VALUE</valueOut> 
		</valueMap>
		<numSensor ruleid="inletSensorValues" index=".1.3.6.1.4.1.13742.6.5.2.3.1.4">
			<type><mapValue mapid="sensorType-vm"><getRowOid>.1.3.6.1.4.1.13742.6.3.3.4.1.6</getRowOid></mapValue></type>
			<!-- the units will be ignored, unless type=num -->
			<units><mapValue mapid="sensorUnits-vm"><getRowOid>.1.3.6.1.4.1.13742.6.3.3.4.1.6</getRowOid></mapValue></units>
			<sensorId>
				<rowNumber/>
				<mapValue mapid="inletSensorID-vm">
				<getRowOid>.1.3.6.1.4.1.13742.6.3.3.4.1.6</getRowOid>
				</mapValue>
			</sensorId>
			<rowTest>
				<mapValue mapid="isSensorAvailable-vm"><getRowOid>.1.3.6.1.4.1.13742.6.5.2.3.1.2</getRowOid></mapValue>
			</rowTest>
			<value>
				<!-- first mult & sub are used to convert to units expected by botzware  -->
				<mult>
					<op>
						<sub>
							<op>
								<!-- adjust device value scaling, based on scaling data provided by device -->
								<mult>
									<op>
										<!-- MIB specifies # of decimals for each value -->
										<mapValue mapid="sensorScaling-vm"><getRowOid>.1.3.6.1.4.1.13742.6.3.3.4.1.7</getRowOid></mapValue>
									</op>
									<op>
										<getRowOid>.1.3.6.1.4.1.13742.6.5.2.3.1.4</getRowOid>
									</op>
								</mult>
							</op> 
							<op>
								<mapValue mapid="sensorSubtract-vm"><getRowOid>.1.3.6.1.4.1.13742.6.3.3.4.1.6</getRowOid></mapValue>
							</op>
						</sub>
					</op>
					<op>
						<mapValue mapid="sensorMultiply-vm"><getRowOid>.1.3.6.1.4.1.13742.6.3.3.4.1.6</getRowOid></mapValue>
					</op>
				</mult>
			</value>
			<label>
				<!-- the three OID indexes are pduId, inletId, and sensorType; sensorType indicating Temp, Humid, etc -->
				<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>PDU %1$s Inlet %2$s</op></regex>
				<space/><mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue>
			</label>
			<sensorSet>
				<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>PDU %1$s Inlet %2$s</op></regex>
			</sensorSet>
		</numSensor>
		
		<alarmFlags2 ruleid="inletSensorValueLowerCritical-af" index=".1.3.6.1.4.1.13742.6.5.2.3.1.4">
			<rowTest>
				<eq>
				<op>
					<bitwise_and>
					<op><getRowOid>.1.3.6.1.4.1.13742.6.3.3.4.1.25</getRowOid></op>
					<op>1</op>
					</bitwise_and>
				</op>
				<op>1</op>
				</eq>
			</rowTest>
			<value>
				<if>
				<op>
					<lt>
					<op><getRowOid>.1.3.6.1.4.1.13742.6.5.2.3.1.4</getRowOid></op>
					<op><getRowOid>.1.3.6.1.4.1.13742.6.3.3.4.1.21</getRowOid></op>
					</lt>
				</op>
				<op>1</op><op>0</op>
				</if>
			</value>
			<alarmFlagsTest match="1">
				<name>
					<activeText>PDU Inlet Below Threshold Critical Alarm</activeText>
					<inactiveText>PDU Inlet Normal</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Input</category>
				<description>
					<activeText>
						<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>PDU %1$s Inlet %2$s</op></regex><space/>
						<mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue><space/>
						has fallen below user-defined threshold.
					</activeText>
					<inactiveText>
						<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>PDU %1$s Inlet %2$s</op></regex><space/>
						<mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue><space/>
						has returned to normal.
					</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags2>
		<alarmFlags2 ruleid="inletSensorValueLowerWarning-af" index=".1.3.6.1.4.1.13742.6.5.2.3.1.4">
			<rowTest>
				<eq>
				<op>
					<bitwise_and>
					<op><getRowOid>.1.3.6.1.4.1.13742.6.3.3.4.1.25</getRowOid></op>
					<op>2</op>
					</bitwise_and>
				</op>
				<op>2</op>
				</eq>
			</rowTest>
			<value>
				<if>
				<op>
					<and>
					<op>
						<ge>
						<op><getRowOid>.1.3.6.1.4.1.13742.6.5.2.3.1.4</getRowOid></op>
						<op><getRowOid>.1.3.6.1.4.1.13742.6.3.3.4.1.21</getRowOid></op>
						</ge>
					</op>
					<op>
						<lt>
						<op><getRowOid>.1.3.6.1.4.1.13742.6.5.2.3.1.4</getRowOid></op>
						<op><getRowOid>.1.3.6.1.4.1.13742.6.3.3.4.1.22</getRowOid></op>
						</lt>
					</op>
					</and>
				</op>
				<op>1</op><op>0</op>
				</if>
			</value>
			<alarmFlagsTest match="1">
				<name>
					<activeText>PDU Inlet Below Threshold Warning</activeText>
					<inactiveText>PDU Inlet Normal</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Input</category>
				<description>
					<activeText>
						<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>PDU %1$s Inlet %2$s</op></regex><space/>
						<mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue><space/>
						has fallen below user-defined threshold.
					</activeText>
					<inactiveText>
						<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>PDU %1$s Inlet %2$s</op></regex><space/>
						<mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue><space/>
						has returned to normal.
					</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags2>
		<alarmFlags2 ruleid="inletSensorValueUpperCritical-af" index=".1.3.6.1.4.1.13742.6.5.2.3.1.4">
			<rowTest>
				<eq>
				<op>
					<bitwise_and>
					<op><getRowOid>.1.3.6.1.4.1.13742.6.3.3.4.1.25</getRowOid></op>
					<op>8</op>
					</bitwise_and>
				</op>
				<op>8</op>
				</eq>
			</rowTest>
			<value>
				<if>
				<op>
					<gt>
					<op><getRowOid>.1.3.6.1.4.1.13742.6.5.2.3.1.4</getRowOid></op>
					<op><getRowOid>.1.3.6.1.4.1.13742.6.3.3.4.1.23</getRowOid></op>
					</gt>
				</op>
				<op>1</op><op>0</op>
				</if>
			</value>
			<alarmFlagsTest match="1">
				<name>
					<activeText>PDU Inlet Above Threshold Critical Alarm</activeText>
					<inactiveText>PDU Inlet Normal</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Input</category>
				<description>
					<activeText>
						<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>PDU %1$s Inlet %2$s</op></regex><space/>
						<mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue><space/>
						has exceeded user-defined threshold.
					</activeText>
					<inactiveText>
						<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>PDU %1$s Inlet %2$s</op></regex><space/>
						<mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue><space/>
						has returned to normal.
					</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags2>
		<alarmFlags2 ruleid="inletSensorValueUpperWarning-af" index=".1.3.6.1.4.1.13742.6.5.2.3.1.4">
			<rowTest>
				<eq>
				<op>
					<bitwise_and>
					<op><getRowOid>.1.3.6.1.4.1.13742.6.3.3.4.1.25</getRowOid></op>
					<op>4</op>
					</bitwise_and>
				</op>
				<op>4</op>
				</eq>
			</rowTest>
			<value>
				<if>
				<op>
					<and>
					<op>
						<le>
						<op><getRowOid>.1.3.6.1.4.1.13742.6.5.2.3.1.4</getRowOid></op>
						<op><getRowOid>.1.3.6.1.4.1.13742.6.3.3.4.1.23</getRowOid></op>
						</le>
					</op>
					<op>
						<gt>
						<op><getRowOid>.1.3.6.1.4.1.13742.6.5.2.3.1.4</getRowOid></op>
						<op><getRowOid>.1.3.6.1.4.1.13742.6.3.3.4.1.24</getRowOid></op>
						</gt>
					</op>
					</and>
				</op>
				<op>1</op><op>0</op>
				</if>
			</value>
			<alarmFlagsTest match="1">
				<name>
					<activeText>PDU Inlet Above Threshold Warning</activeText>
					<inactiveText>PDU Inlet Normal</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Input</category>
				<description>
					<activeText>
						<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>PDU %1$s Inlet %2$s</op></regex><space/>
						<mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue><space/>
						has exceeded user-defined threshold.
					</activeText>
					<inactiveText>
						<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>PDU %1$s Inlet %2$s</op></regex><space/>
						<mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue><space/>
						has returned to normal.
					</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags2>

		<valueMap ruleid="inletPoleSensorID-vm">
			<valueIn>2</valueIn><valueOut>OUTPUT_CURRENT</valueOut> 
			<valueIn>3</valueIn><valueOut>_RPDU_OUTPUT_POWER</valueOut>
			<valueIn>4</valueIn><valueOut>_RPDU_OUTPUT_APPARENT_POWER</valueOut> 
			<valueIn>*</valueIn><valueOut>_INLET_POLE_SENSOR_VALUE</valueOut> 
		</valueMap>
		<numSensor ruleid="inletPoleSensorValues" index=".1.3.6.1.4.1.13742.6.5.2.4.1.4">
			<type><mapValue mapid="sensorType-vm"><getRowOid>.1.3.6.1.4.1.13742.6.3.3.6.1.6</getRowOid></mapValue></type>
			<!-- the units will be ignored, unless type=num -->
			<units><mapValue mapid="sensorUnits-vm"><getRowOid>.1.3.6.1.4.1.13742.6.3.3.6.1.6</getRowOid></mapValue></units>
			<sensorId>
				<rowNumber/>_
				<mapValue mapid="inletPoleSensorID-vm">
				<getRowOid>.1.3.6.1.4.1.13742.6.3.3.6.1.6</getRowOid>
				</mapValue>_
				<regex>
				<op>(\d+).(\d+).(\d+).(\d+)</op>
				<op><rowIndex/></op>
				<op>%3$s</op>
				</regex>
			</sensorId>
			<rowTest>
				<mapValue mapid="isSensorAvailable-vm"><getRowOid>.1.3.6.1.4.1.13742.6.5.2.4.1.2</getRowOid></mapValue>
			</rowTest>
			<value>
				<!-- first mult & sub are used to convert to units expected by botzware  -->
				<mult>
					<op>
						<sub>
							<op>
								<!-- adjust device value scaling, based on scaling data provided by device -->
								<mult>
									<op>
										<!-- MIB specifies # of decimals for each value -->
										<mapValue mapid="sensorScaling-vm"><getRowOid>.1.3.6.1.4.1.13742.6.3.3.6.1.7</getRowOid></mapValue>
									</op>
									<op>
										<getRowOid>.1.3.6.1.4.1.13742.6.5.2.4.1.4</getRowOid>
									</op>
								</mult>
							</op> 
							<op>
								<mapValue mapid="sensorSubtract-vm"><getRowOid>.1.3.6.1.4.1.13742.6.3.3.6.1.6</getRowOid></mapValue>
							</op>
						</sub>
					</op>
					<op>
						<mapValue mapid="sensorMultiply-vm"><getRowOid>.1.3.6.1.4.1.13742.6.3.3.6.1.6</getRowOid></mapValue>
					</op>
				</mult>
			</value>
			<label>
				<!-- the four OID indexes are pduId, inletId, inletPoleIndex, and sensorType; sensorType indicating Temp, Humid, etc -->
				<regex><op>(\d+)\.(\d+)\.\d+\.\d+</op><op><rowIndex/></op><op>PDU %1$s Inlet %2$s</op></regex><space/>
				<regex><op>\d+\.\d+\.(\d+)\.\d+</op><op><rowIndex/></op><op>Pole %1$s</op></regex><space/>
				<mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue>
			</label>
			<sensorSet>
				<regex><op>(\d+)\.(\d+)\.\d+\.\d+</op><op><rowIndex/></op><op>PDU %1$s Inlet %2$s</op></regex><space/>
				<regex><op>\d+\.\d+\.(\d+)\.\d+</op><op><rowIndex/></op><op>Pole %1$s</op></regex>
			</sensorSet>
		</numSensor>
		
		<alarmFlags2 ruleid="inletPoleSensorValueLowerCritical-af" index=".1.3.6.1.4.1.13742.6.5.2.4.1.4">
			<rowTest>
				<eq>
				<op>
					<bitwise_and>
					<op><getRowOid>.1.3.6.1.4.1.13742.6.3.3.6.1.25</getRowOid></op>
					<op>1</op>
					</bitwise_and>
				</op>
				<op>1</op>
				</eq>
			</rowTest>
			<value>
				<if>
				<op>
					<lt>
					<op><getRowOid>.1.3.6.1.4.1.13742.6.5.2.4.1.4</getRowOid></op>
					<op><getRowOid>.1.3.6.1.4.1.13742.6.3.3.6.1.21</getRowOid></op>
					</lt>
				</op>
				<op>1</op><op>0</op>
				</if>
			</value>
			<alarmFlagsTest match="1">
				<name>
					<activeText>PDU Inlet Pole Below Threshold Critical Alarm</activeText>
					<inactiveText>PDU Inlet Pole Normal</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Input</category>
				<description>
					<activeText>
						<regex><op>(\d+)\.(\d+)\.\d+\.\d+</op><op><rowIndex/></op><op>PDU %1$s Inlet %2$s</op></regex><space/>
						<regex><op>\d+\.\d+\.(\d+)\.\d+</op><op><rowIndex/></op><op>Pole %1$s</op></regex><space/>
						<mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue><space/>
						has fallen below user-defined threshold.
					</activeText>
					<inactiveText>
						<regex><op>(\d+)\.(\d+)\.\d+\.\d+</op><op><rowIndex/></op><op>PDU %1$s Inlet %2$s</op></regex><space/>
						<regex><op>\d+\.\d+\.(\d+)\.\d+</op><op><rowIndex/></op><op>Pole %1$s</op></regex><space/>
						<mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue><space/>
						has returned to normal.
					</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags2>
		<alarmFlags2 ruleid="inletPoleSensorValueLowerWarning-af" index=".1.3.6.1.4.1.13742.6.5.2.4.1.4">
			<rowTest>
				<eq>
				<op>
					<bitwise_and>
					<op><getRowOid>.1.3.6.1.4.1.13742.6.3.3.6.1.25</getRowOid></op>
					<op>2</op>
					</bitwise_and>
				</op>
				<op>2</op>
				</eq>
			</rowTest>
			<value>
				<if>
				<op>
					<and>
					<op>
						<ge>
						<op><getRowOid>.1.3.6.1.4.1.13742.6.5.2.4.1.4</getRowOid></op>
						<op><getRowOid>.1.3.6.1.4.1.13742.6.3.3.6.1.21</getRowOid></op>
						</ge>
					</op>
					<op>
						<lt>
						<op><getRowOid>.1.3.6.1.4.1.13742.6.5.2.4.1.4</getRowOid></op>
						<op><getRowOid>.1.3.6.1.4.1.13742.6.3.3.6.1.22</getRowOid></op>
						</lt>
					</op>
					</and>
				</op>
				<op>1</op><op>0</op>
				</if>
			</value>
			<alarmFlagsTest match="1">
				<name>
					<activeText>PDU Inlet Pole Below Threshold Warning</activeText>
					<inactiveText>PDU Inlet Pole Normal</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Input</category>
				<description>
					<activeText>
						<regex><op>(\d+)\.(\d+)\.\d+\.\d+</op><op><rowIndex/></op><op>PDU %1$s Inlet %2$s</op></regex><space/>
						<regex><op>\d+\.\d+\.(\d+)\.\d+</op><op><rowIndex/></op><op>Pole %1$s</op></regex><space/>
						<mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue><space/>
						has fallen below user-defined threshold.
					</activeText>
					<inactiveText>
						<regex><op>(\d+)\.(\d+)\.\d+\.\d+</op><op><rowIndex/></op><op>PDU %1$s Inlet %2$s</op></regex><space/>
						<regex><op>\d+\.\d+\.(\d+)\.\d+</op><op><rowIndex/></op><op>Pole %1$s</op></regex><space/>
						<mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue><space/>
						has returned to normal.
					</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags2>
		<alarmFlags2 ruleid="inletPoleSensorValueUpperCritical-af" index=".1.3.6.1.4.1.13742.6.5.2.4.1.4">
			<rowTest>
				<eq>
				<op>
					<bitwise_and>
					<op><getRowOid>.1.3.6.1.4.1.13742.6.3.3.6.1.25</getRowOid></op>
					<op>8</op>
					</bitwise_and>
				</op>
				<op>8</op>
				</eq>
			</rowTest>
			<value>
				<if>
				<op>
					<gt>
					<op><getRowOid>.1.3.6.1.4.1.13742.6.5.2.4.1.4</getRowOid></op>
					<op><getRowOid>.1.3.6.1.4.1.13742.6.3.3.6.1.23</getRowOid></op>
					</gt>
				</op>
				<op>1</op><op>0</op>
				</if>
			</value>
			<alarmFlagsTest match="1">
				<name>
					<activeText>PDU Inlet Pole Above Threshold Critical</activeText>
					<inactiveText>PDU Inlet Pole Normal</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Input</category>
				<description>
					<activeText>
						<regex><op>(\d+)\.(\d+)\.\d+\.\d+</op><op><rowIndex/></op><op>PDU %1$s Inlet %2$s</op></regex><space/>
						<regex><op>\d+\.\d+\.(\d+)\.\d+</op><op><rowIndex/></op><op>Pole %1$s</op></regex><space/>
						<mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue><space/>
						has exceeded user-defined threshold.
					</activeText>
					<inactiveText>
						<regex><op>(\d+)\.(\d+)\.\d+\.\d+</op><op><rowIndex/></op><op>PDU %1$s Inlet %2$s</op></regex><space/>
						<regex><op>\d+\.\d+\.(\d+)\.\d+</op><op><rowIndex/></op><op>Pole %1$s</op></regex><space/>
						<mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue><space/>
						has returned to normal.
					</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags2>
		<alarmFlags2 ruleid="inletPoleSensorValueUpperWarning-af" index=".1.3.6.1.4.1.13742.6.5.2.4.1.4">
			<rowTest>
				<eq>
				<op>
					<bitwise_and>
					<op><getRowOid>.1.3.6.1.4.1.13742.6.3.3.6.1.25</getRowOid></op>
					<op>4</op>
					</bitwise_and>
				</op>
				<op>4</op>
				</eq>
			</rowTest>
			<value>
				<if>
				<op>
					<and>
					<op>
						<le>
						<op><getRowOid>.1.3.6.1.4.1.13742.6.5.2.4.1.4</getRowOid></op>
						<op><getRowOid>.1.3.6.1.4.1.13742.6.3.3.6.1.23</getRowOid></op>
						</le>
					</op>
					<op>
						<gt>
						<op><getRowOid>.1.3.6.1.4.1.13742.6.5.2.4.1.4</getRowOid></op>
						<op><getRowOid>.1.3.6.1.4.1.13742.6.3.3.6.1.24</getRowOid></op>
						</gt>
					</op>
					</and>
				</op>
				<op>1</op><op>0</op>
				</if>
			</value>
			<alarmFlagsTest match="1">
				<name>
					<activeText>PDU Inlet Pole Above Threshold Warning</activeText>
					<inactiveText>PDU Inlet Pole Normal</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Input</category>
				<description>
					<activeText>
						<regex><op>(\d+)\.(\d+)\.\d+\.\d+</op><op><rowIndex/></op><op>PDU %1$s Inlet %2$s</op></regex><space/>
						<regex><op>\d+\.\d+\.(\d+)\.\d+</op><op><rowIndex/></op><op>Pole %1$s</op></regex><space/>
						<mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue><space/>
						has exceeded user-defined threshold.
					</activeText>
					<inactiveText>
						<regex><op>(\d+)\.(\d+)\.\d+\.\d+</op><op><rowIndex/></op><op>PDU %1$s Inlet %2$s</op></regex><space/>
						<regex><op>\d+\.\d+\.(\d+)\.\d+</op><op><rowIndex/></op><op>Pole %1$s</op></regex><space/>
						<mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue><space/>
						has returned to normal.
					</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags2>

		<numSensor ruleid="overCurrentProtectorSensorValues" index=".1.3.6.1.4.1.13742.6.5.3.3.1.4">
			<type><mapValue mapid="sensorType-vm"><getRowOid>.1.3.6.1.4.1.13742.6.3.4.4.1.6</getRowOid></mapValue></type>
			<!-- the units will be ignored, unless type=num -->
			<units><mapValue mapid="sensorUnits-vm"><getRowOid>.1.3.6.1.4.1.13742.6.3.4.4.1.6</getRowOid></mapValue></units>
			<sensorId>OCP_SENSOR_VALUE_<rowIndex/></sensorId>
			<rowTest>
				<mapValue mapid="isSensorAvailable-vm"><getRowOid>.1.3.6.1.4.1.13742.6.5.3.3.1.2</getRowOid></mapValue>
			</rowTest>
			<value>
				<!-- first mult & sub are used to convert to units expected by botzware  -->
				<mult>
					<op>
						<sub>
							<op>
								<!-- adjust device value scaling, based on scaling data provided by device -->
								<mult>
									<op>
										<!-- MIB specifies # of decimals for each value -->
										<mapValue mapid="sensorScaling-vm"><getRowOid>.1.3.6.1.4.1.13742.6.3.4.4.1.7</getRowOid></mapValue>
									</op>
									<op>
										<getRowOid>.1.3.6.1.4.1.13742.6.5.3.3.1.4</getRowOid>
									</op>
								</mult>
							</op> 
							<op>
								<mapValue mapid="sensorSubtract-vm"><getRowOid>.1.3.6.1.4.1.13742.6.3.4.4.1.6</getRowOid></mapValue>
							</op>
						</sub>
					</op>
					<op>
						<mapValue mapid="sensorMultiply-vm"><getRowOid>.1.3.6.1.4.1.13742.6.3.4.4.1.6</getRowOid></mapValue>
					</op>
				</mult>
			</value>
			<label>
				<!-- the three OID indexes are pduId, inletId, and sensorType; sensorType indicating Temp, Humid, etc -->
				<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>PDU %1$s OCP %2$s</op></regex>
				<space/><mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue>
			</label>
			<sensorSet>
				<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>PDU %1$s OCP %2$s</op></regex>
			</sensorSet>
		</numSensor>
		
		<alarmFlags2 ruleid="overCurrentProtectorSensorValueLowerCritical-af" index=".1.3.6.1.4.1.13742.6.5.3.3.1.4">
			<rowTest>
				<eq>
				<op>
					<bitwise_and>
					<op><getRowOid>.1.3.6.1.4.1.13742.6.3.4.4.1.25</getRowOid></op>
					<op>1</op>
					</bitwise_and>
				</op>
				<op>1</op>
				</eq>
			</rowTest>
			<value>
				<if>
				<op>
					<lt>
					<op><getRowOid>.1.3.6.1.4.1.13742.6.5.3.3.1.4</getRowOid></op>
					<op><getRowOid>.1.3.6.1.4.1.13742.6.3.4.4.1.21</getRowOid></op>
					</lt>
				</op>
				<op>1</op><op>0</op>
				</if>
			</value>
			<alarmFlagsTest match="1">
				<name>
					<activeText>PDU OCP Below Threshold Critical Alarm</activeText>
					<inactiveText>PDU OCP Normal</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Power</category>
				<description>
					<activeText>
						<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>PDU %1$s OCP %2$s</op></regex>
						<space/><mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue><space/>
						has fallen below user-defined threshold.
					</activeText>
					<inactiveText>
						<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>PDU %1$s OCP %2$s</op></regex>
						<space/><mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue><space/>
						has returned to normal.
					</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags2>
		<alarmFlags2 ruleid="overCurrentProtectorSensorValueLowerWarning-af" index=".1.3.6.1.4.1.13742.6.5.3.3.1.4">
			<rowTest>
				<eq>
				<op>
					<bitwise_and>
					<op><getRowOid>.1.3.6.1.4.1.13742.6.3.4.4.1.25</getRowOid></op>
					<op>2</op>
					</bitwise_and>
				</op>
				<op>2</op>
				</eq>
			</rowTest>
			<value>
				<if>
				<op>
					<and>
					<op>
						<ge>
						<op><getRowOid>.1.3.6.1.4.1.13742.6.5.3.3.1.4</getRowOid></op>
						<op><getRowOid>.1.3.6.1.4.1.13742.6.3.4.4.1.21</getRowOid></op>
						</ge>
					</op>
					<op>
						<lt>
						<op><getRowOid>.1.3.6.1.4.1.13742.6.5.3.3.1.4</getRowOid></op>
						<op><getRowOid>.1.3.6.1.4.1.13742.6.3.4.4.1.22</getRowOid></op>
						</lt>
					</op>
					</and>
				</op>
				<op>1</op><op>0</op>
				</if>
			</value>
			<alarmFlagsTest match="1">
				<name>
					<activeText>PDU OCP Below Threshold Warning</activeText>
					<inactiveText>PDU OCP Normal</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Power</category>
				<description>
					<activeText>
						<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>PDU %1$s OCP %2$s</op></regex>
						<space/><mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue><space/>
						has fallen below user-defined threshold.
					</activeText>
					<inactiveText>
						<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>PDU %1$s OCP %2$s</op></regex>
						<space/><mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue><space/>
						has returned to normal.
					</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags2>
		<alarmFlags2 ruleid="overCurrentProtectorSensorValueUpperCritical-af" index=".1.3.6.1.4.1.13742.6.5.3.3.1.4">
			<rowTest>
				<eq>
				<op>
					<bitwise_and>
					<op><getRowOid>.1.3.6.1.4.1.13742.6.3.4.4.1.25</getRowOid></op>
					<op>8</op>
					</bitwise_and>
				</op>
				<op>8</op>
				</eq>
			</rowTest>
			<value>
				<if>
				<op>
					<gt>
					<op><getRowOid>.1.3.6.1.4.1.13742.6.5.3.3.1.4</getRowOid></op>
					<op><getRowOid>.1.3.6.1.4.1.13742.6.3.4.4.1.23</getRowOid></op>
					</gt>
				</op>
				<op>1</op><op>0</op>
				</if>
			</value>
			<alarmFlagsTest match="1">
				<name>
					<activeText>PDU OCP Above Threshold Critical Alarm</activeText>
					<inactiveText>PDU OCP Normal</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Power</category>
				<description>
					<activeText>
						<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>PDU %1$s OCP %2$s</op></regex>
						<space/><mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue><space/>
						has exceeded user-defined threshold.
					</activeText>
					<inactiveText>
						<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>PDU %1$s OCP %2$s</op></regex>
						<space/><mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue><space/>
						has returned to normal.
					</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags2>
		<alarmFlags2 ruleid="overCurrentProtectorSensorValueUpperWarning-af" index=".1.3.6.1.4.1.13742.6.5.3.3.1.4">
			<rowTest>
				<eq>
				<op>
					<bitwise_and>
					<op><getRowOid>.1.3.6.1.4.1.13742.6.3.4.4.1.25</getRowOid></op>
					<op>4</op>
					</bitwise_and>
				</op>
				<op>4</op>
				</eq>
			</rowTest>
			<value>
				<if>
				<op>
					<and>
					<op>
						<le>
						<op><getRowOid>.1.3.6.1.4.1.13742.6.5.3.3.1.4</getRowOid></op>
						<op><getRowOid>.1.3.6.1.4.1.13742.6.3.4.4.1.23</getRowOid></op>
						</le>
					</op>
					<op>
						<gt>
						<op><getRowOid>.1.3.6.1.4.1.13742.6.5.3.3.1.4</getRowOid></op>
						<op><getRowOid>.1.3.6.1.4.1.13742.6.3.4.4.1.24</getRowOid></op>
						</gt>
					</op>
					</and>
				</op>
				<op>1</op><op>0</op>
				</if>
			</value>
			<alarmFlagsTest match="1">
				<name>
					<activeText>PDU OCP Below Threshold Warning</activeText>
					<inactiveText>PDU OCP Normal</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Power</category>
				<description>
					<activeText>
						<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>PDU %1$s OCP %2$s</op></regex>
						<space/><mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue><space/>
						has exceeded user-defined threshold.
					</activeText>
					<inactiveText>
						<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>PDU %1$s OCP %2$s</op></regex>
						<space/><mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue><space/>
						has returned to normal.
					</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags2>

		<!-- outlet sensor values -->
		<numSensor ruleid="outletSensorValues" index=".1.3.6.1.4.1.13742.6.5.4.3.1.4">
			<type><mapValue mapid="sensorType-vm"><getRowOid>.1.3.6.1.4.1.13742.6.3.5.4.1.6</getRowOid></mapValue></type>
			<!-- the units will be ignored, unless type=num -->
			<units><mapValue mapid="sensorUnits-vm"><getRowOid>.1.3.6.1.4.1.13742.6.3.5.4.1.6</getRowOid></mapValue></units>
			<sensorId>OUTLET_SENSOR_VALUE_<rowIndex/></sensorId>
			<rowTest>
				<mapValue mapid="isSensorAvailable-vm"><getRowOid>.1.3.6.1.4.1.13742.6.5.4.3.1.2</getRowOid></mapValue>
			</rowTest>
			<value>
				<!-- first mult & sub are used to convert to units expected by botzware  -->
				<mult>
					<op>
						<sub>
							<op>
								<!-- adjust device value scaling, based on scaling data provided by device -->
								<mult>
									<op>
										<!-- MIB specifies # of decimals for each value -->
										<mapValue mapid="sensorScaling-vm"><getRowOid>.1.3.6.1.4.1.13742.6.3.5.4.1.7</getRowOid></mapValue>
									</op>
									<op>
										<getRowOid>.1.3.6.1.4.1.13742.6.5.4.3.1.4</getRowOid>
									</op>
								</mult>
							</op> 
							<op>
								<mapValue mapid="sensorSubtract-vm"><getRowOid>.1.3.6.1.4.1.13742.6.3.5.4.1.6</getRowOid></mapValue>
							</op>
						</sub>
					</op>
					<op>
						<mapValue mapid="sensorMultiply-vm"><getRowOid>.1.3.6.1.4.1.13742.6.3.5.4.1.6</getRowOid></mapValue>
					</op>
				</mult>
			</value>
			<label>
				<!-- the three OID indexes are pduId, outletId, and sensorType; sensorType indicating Temp, Humid, etc -->
				<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>PDU %1$s Outlet %2$s</op></regex><space/>
				(<getOid>.1.3.6.1.4.1.13742.6.3.5.3.1.3.<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>%1$s.%2$s</op></regex></getOid>)
				<space/><mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue>
			</label>
			<sensorSet>
				<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>PDU %1$s Outlet %2$s</op></regex><space/>
				(<getOid>.1.3.6.1.4.1.13742.6.3.5.3.1.3.<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>%1$s.%2$s</op></regex></getOid>)
			</sensorSet>
		</numSensor>
		
		<alarmFlags2 ruleid="outletSensorValueLowerCritical-af" index=".1.3.6.1.4.1.13742.6.5.4.3.1.4">
			<rowTest>
				<eq>
				<op>
					<bitwise_and>
					<op><getRowOid>.1.3.6.1.4.1.13742.6.3.5.4.1.25</getRowOid></op>
					<op>1</op>
					</bitwise_and>
				</op>
				<op>1</op>
				</eq>
			</rowTest>
			<value>
				<if>
				<op>
					<lt>
					<op><getRowOid>.1.3.6.1.4.1.13742.6.5.4.3.1.4</getRowOid></op>
					<op><getRowOid>.1.3.6.1.4.1.13742.6.3.5.4.1.21</getRowOid></op>
					</lt>
				</op>
				<op>1</op><op>0</op>
				</if>
			</value>
			<alarmFlagsTest match="1">
				<name>
					<activeText>PDU Outlet Below Threshold Critical Alarm</activeText>
					<inactiveText>PDU Outlet Normal</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Output</category>
				<description>
					<activeText>
						<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>PDU %1$s Outlet %2$s</op></regex><space/>
						(<getOid>.1.3.6.1.4.1.13742.6.3.5.3.1.3.<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>%1$s.%2$s</op></regex></getOid>)<space/>
						<mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue><space/>
						has fallen below user-defined threshold.
					</activeText>
					<inactiveText>
						<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>PDU %1$s Outlet %2$s</op></regex><space/>
						(<getOid>.1.3.6.1.4.1.13742.6.3.5.3.1.3.<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>%1$s.%2$s</op></regex></getOid>)<space/>
						<mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue><space/>
						has returned to normal.
					</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags2>
		<alarmFlags2 ruleid="outletSensorValueLowerWarning-af" index=".1.3.6.1.4.1.13742.6.5.4.3.1.4">
			<rowTest>
				<eq>
				<op>
					<bitwise_and>
					<op><getRowOid>.1.3.6.1.4.1.13742.6.3.5.4.1.25</getRowOid></op>
					<op>2</op>
					</bitwise_and>
				</op>
				<op>2</op>
				</eq>
			</rowTest>
			<value>
				<if>
				<op>
					<and>
					<op>
						<ge>
						<op><getRowOid>.1.3.6.1.4.1.13742.6.5.4.3.1.4</getRowOid></op>
						<op><getRowOid>.1.3.6.1.4.1.13742.6.3.5.4.1.21</getRowOid></op>
						</ge>
					</op>
					<op>
						<lt>
						<op><getRowOid>.1.3.6.1.4.1.13742.6.5.4.3.1.4</getRowOid></op>
						<op><getRowOid>.1.3.6.1.4.1.13742.6.3.5.4.1.22</getRowOid></op>
						</lt>
					</op>
					</and>
				</op>
				<op>1</op><op>0</op>
				</if>
			</value>
			<alarmFlagsTest match="1">
				<name>
					<activeText>PDU Outlet Below Threshold Warning</activeText>
					<inactiveText>PDU Outlet Normal</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Output</category>
				<description>
					<activeText>
						<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>PDU %1$s Outlet %2$s</op></regex><space/>
						(<getOid>.1.3.6.1.4.1.13742.6.3.5.3.1.3.<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>%1$s.%2$s</op></regex></getOid>)<space/>
						<mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue><space/>
						has fallen below user-defined threshold.
					</activeText>
					<inactiveText>
						<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>PDU %1$s Outlet %2$s</op></regex><space/>
						(<getOid>.1.3.6.1.4.1.13742.6.3.5.3.1.3.<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>%1$s.%2$s</op></regex></getOid>)<space/>
						<mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue><space/>
						has returned to normal.
					</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags2>
		<alarmFlags2 ruleid="outletSensorValueUpperCritical-af" index=".1.3.6.1.4.1.13742.6.5.4.3.1.4">
			<rowTest>
				<eq>
				<op>
					<bitwise_and>
					<op><getRowOid>.1.3.6.1.4.1.13742.6.3.5.4.1.25</getRowOid></op>
					<op>8</op>
					</bitwise_and>
				</op>
				<op>8</op>
				</eq>
			</rowTest>
			<value>
				<if>
				<op>
					<gt>
					<op><getRowOid>.1.3.6.1.4.1.13742.6.5.4.3.1.4</getRowOid></op>
					<op><getRowOid>.1.3.6.1.4.1.13742.6.3.5.4.1.23</getRowOid></op>
					</gt>
				</op>
				<op>1</op><op>0</op>
				</if>
			</value>
			<alarmFlagsTest match="1">
				<name>
					<activeText>PDU Outlet Above Threshold Critical Alarm</activeText>
					<inactiveText>PDU Outlet Normal</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Output</category>
				<description>
					<activeText>
						<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>PDU %1$s Outlet %2$s</op></regex><space/>
						(<getOid>.1.3.6.1.4.1.13742.6.3.5.3.1.3.<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>%1$s.%2$s</op></regex></getOid>)<space/>
						<mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue><space/>
						has exceeded user-defined threshold.
					</activeText>
					<inactiveText>
						<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>PDU %1$s Outlet %2$s</op></regex><space/>
						(<getOid>.1.3.6.1.4.1.13742.6.3.5.3.1.3.<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>%1$s.%2$s</op></regex></getOid>)<space/>
						<mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue><space/>
						has returned to normal.
					</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags2>
		<alarmFlags2 ruleid="outletSensorValueUpperWarning-af" index=".1.3.6.1.4.1.13742.6.5.4.3.1.4">
			<rowTest>
				<eq>
				<op>
					<bitwise_and>
					<op><getRowOid>.1.3.6.1.4.1.13742.6.3.5.4.1.25</getRowOid></op>
					<op>4</op>
					</bitwise_and>
				</op>
				<op>4</op>
				</eq>
			</rowTest>
			<value>
				<if>
				<op>
					<and>
					<op>
						<le>
						<op><getRowOid>.1.3.6.1.4.1.13742.6.5.4.3.1.4</getRowOid></op>
						<op><getRowOid>.1.3.6.1.4.1.13742.6.3.5.4.1.23</getRowOid></op>
						</le>
					</op>
					<op>
						<gt>
						<op><getRowOid>.1.3.6.1.4.1.13742.6.5.4.3.1.4</getRowOid></op>
						<op><getRowOid>.1.3.6.1.4.1.13742.6.3.5.4.1.24</getRowOid></op>
						</gt>
					</op>
					</and>
				</op>
				<op>1</op><op>0</op>
				</if>
			</value>
			<alarmFlagsTest match="1">
				<name>
					<activeText>PDU Outlet Above Threshold Warning</activeText>
					<inactiveText>PDU Outlet Normal</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Output</category>
				<description>
					<activeText>
						<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>PDU %1$s Outlet %2$s</op></regex><space/>
						(<getOid>.1.3.6.1.4.1.13742.6.3.5.3.1.3.<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>%1$s.%2$s</op></regex></getOid>)<space/>
						<mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue><space/>
						has exceeded user-defined threshold.
					</activeText>
					<inactiveText>
						<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>PDU %1$s Outlet %2$s</op></regex><space/>
						(<getOid>.1.3.6.1.4.1.13742.6.3.5.3.1.3.<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>%1$s.%2$s</op></regex></getOid>)<space/>
						<mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue><space/>
						has returned to normal.
					</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags2>

		<valueMap ruleid="externalSensorType-vm">
			<valueIn>1</valueIn><valueOut>amperage</valueOut> 
			<valueIn>2</valueIn><valueOut>amperage</valueOut> 
			<valueIn>3</valueIn><valueOut>amperage</valueOut> 
			<valueIn>4</valueIn><valueOut>voltage</valueOut> 
			<valueIn>5</valueIn><valueOut>powerW</valueOut>
			<valueIn>6</valueIn><valueOut>powerVA</valueOut> 
			<valueIn>7</valueIn><valueOut>num/powerfactor</valueOut> 
			<valueIn>8</valueIn><valueOut>num/kwatthr</valueOut> 
			<valueIn>9</valueIn><valueOut>num/kVAhr</valueOut> 
			<valueIn>10</valueIn><valueOut>temp</valueOut> 
			<valueIn>11</valueIn><valueOut>humidity</valueOut> 
			<valueIn>12</valueIn><valueOut>airflow</valueOut> 
			<valueIn>13</valueIn><valueOut>pressure</valueOut> 
			<valueIn>14</valueIn><valueOut>num</valueOut> 
			<valueIn>15</valueIn><valueOut>num</valueOut> 
			<valueIn>16</valueIn><valueOut>num</valueOut> 
			<valueIn>17</valueIn><valueOut>num</valueOut> 
			<valueIn>18</valueIn><valueOut>num</valueOut>
			<valueIn>19</valueIn><valueOut>num</valueOut> 
			<valueIn>20</valueIn><valueOut>num</valueOut> 
			<valueIn>21</valueIn><valueOut>fanspeed</valueOut> 
			<valueIn>*</valueIn><valueOut>num</valueOut> 
		</valueMap>
		<valueMap ruleid="externalSensorID-vm">
			<valueIn>10</valueIn><valueOut>_RPDU_TEMP</valueOut> 
			<valueIn>11</valueIn><valueOut>_RPDU_HUMIDITY</valueOut>
			<valueIn>*</valueIn><valueOut>EXTERNAL_SENSOR_VALUE</valueOut> 
		</valueMap>
		<!-- outlet sensor values -->
		<numSensor ruleid="externalSensorValues" index=".1.3.6.1.4.1.13742.6.5.5.3.1.4">
			<type><mapValue mapid="externalSensorType-vm"><getRowOid>.1.3.6.1.4.1.13742.6.3.6.3.1.2</getRowOid></mapValue></type>
			<!-- the units will be ignored, unless type=num -->
			<units><mapValue mapid="sensorUnits-vm"><getRowOid>.1.3.6.1.4.1.13742.6.3.6.3.1.16</getRowOid></mapValue></units>
			<sensorId>
				<mapValue mapid="externalSensorID-vm">
				<getRowOid>.1.3.6.1.4.1.13742.6.3.6.3.1.2</getRowOid>
				</mapValue>_<rowNumber/>
			</sensorId>
			<rowTest>
				<mapValue mapid="isSensorAvailable-vm"><getRowOid>.1.3.6.1.4.1.13742.6.5.5.3.1.2</getRowOid></mapValue>
			</rowTest>
			<value>
				<!-- first mult & sub are used to convert to units expected by botzware  -->
				<mult>
				<op>
					<sub>
					<op>
						<!-- adjust device value scaling, based on scaling data provided by device -->
						<mult>
						<op>
							<!-- MIB specifies # of decimals for each value -->
							<mapValue mapid="sensorScaling-vm"><getRowOid>.1.3.6.1.4.1.13742.6.3.6.3.1.17</getRowOid></mapValue>
						</op>
						<op>
							<getRowOid>.1.3.6.1.4.1.13742.6.5.5.3.1.4</getRowOid>
						</op>
						</mult>
					</op> 
					<op>
						<mapValue mapid="sensorSubtract-vm"><getRowOid>.1.3.6.1.4.1.13742.6.3.6.3.1.16</getRowOid></mapValue>
					</op>
					</sub>
				</op>
				<op>
						<mapValue mapid="sensorMultiply-vm"><getRowOid>.1.3.6.1.4.1.13742.6.3.6.3.1.16</getRowOid></mapValue>
				</op>
				</mult>
			</value>
			<label>
				<regex><op>(\d+)\.(\d+)</op><op><rowIndex/></op><op>PDU %1$s</op></regex><space/>
				<getRowOid>.1.3.6.1.4.1.13742.6.3.6.3.1.4</getRowOid><space/>(
				<if>
					<op><eq><op><getRowOid>.1.3.6.1.4.1.13742.6.3.6.3.1.2</getRowOid></op><op>14</op></eq></op>
					<op><mapValue mapid="sensorTypeIndex-vm"><getRowOid>.1.3.6.1.4.1.13742.6.3.6.3.1.10</getRowOid></mapValue></op>
					<op><mapValue mapid="sensorTypeIndex-vm"><getRowOid>.1.3.6.1.4.1.13742.6.3.6.3.1.2</getRowOid></mapValue></op>
				</if>)
			</label>
			<sensorSet>
				<regex><op>(\d+)\.(\d+)</op><op><rowIndex/></op><op>PDU %1$s</op></regex><space/>External Sensors
			</sensorSet>
		</numSensor>
		
		<alarmFlags2 ruleid="externalSensorValueLowerCritical-af" index=".1.3.6.1.4.1.13742.6.5.5.3.1.4">
			<rowTest>
				<eq>
				<op>
					<bitwise_and>
					<op><getRowOid>.1.3.6.1.4.1.13742.6.3.6.3.1.35</getRowOid></op>
					<op>1</op>
					</bitwise_and>
				</op>
				<op>1</op>
				</eq>
			</rowTest>
			<value>
				<if>
				<op>
					<lt>
					<op><getRowOid>.1.3.6.1.4.1.13742.6.5.5.3.1.4</getRowOid></op>
					<op><getRowOid>.1.3.6.1.4.1.13742.6.3.6.3.1.31</getRowOid></op>
					</lt>
				</op>
				<op>1</op><op>0</op>
				</if>
			</value>
			<alarmFlagsTest match="1">
				<name>
					<activeText>PDU Below Threshold Critical Alarm</activeText>
					<inactiveText>PDU Normal</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Device</category>
				<description>
					<activeText>
						<regex><op>(\d+)\.(\d+)</op><op><rowIndex/></op><op>PDU %1$s</op></regex><space/>
						<getRowOid>.1.3.6.1.4.1.13742.6.3.6.3.1.4</getRowOid><space/>
						has fallen below user-defined threshold.
					</activeText>
					<inactiveText>
						<regex><op>(\d+)\.(\d+)</op><op><rowIndex/></op><op>PDU %1$s</op></regex><space/>
						<getRowOid>.1.3.6.1.4.1.13742.6.3.6.3.1.4</getRowOid><space/>
						has returned to normal.
					</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags2>
		<alarmFlags2 ruleid="externalSensorValueLowerWarning-af" index=".1.3.6.1.4.1.13742.6.5.5.3.1.4">
			<rowTest>
				<eq>
				<op>
					<bitwise_and>
					<op><getRowOid>.1.3.6.1.4.1.13742.6.3.6.3.1.35</getRowOid></op>
					<op>2</op>
					</bitwise_and>
				</op>
				<op>2</op>
				</eq>
			</rowTest>
			<value>
				<if>
				<op>
					<and>
					<op>
						<ge>
						<op><getRowOid>.1.3.6.1.4.1.13742.6.5.5.3.1.4</getRowOid></op>
						<op><getRowOid>.1.3.6.1.4.1.13742.6.3.6.3.1.31</getRowOid></op>
						</ge>
					</op>
					<op>
						<lt>
						<op><getRowOid>.1.3.6.1.4.1.13742.6.5.5.3.1.4</getRowOid></op>
						<op><getRowOid>.1.3.6.1.4.1.13742.6.3.6.3.1.32</getRowOid></op>
						</lt>
					</op>
					</and>
				</op>
				<op>1</op><op>0</op>
				</if>
			</value>
			<alarmFlagsTest match="1">
				<name>
					<activeText>PDU Below Threshold Warning</activeText>
					<inactiveText>PDU Normal</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Device</category>
				<description>
					<activeText>
						<regex><op>(\d+)\.(\d+)</op><op><rowIndex/></op><op>PDU %1$s</op></regex><space/>
						<getRowOid>.1.3.6.1.4.1.13742.6.3.6.3.1.4</getRowOid><space/>
						has fallen below user-defined threshold.
					</activeText>
					<inactiveText>
						<regex><op>(\d+)\.(\d+)</op><op><rowIndex/></op><op>PDU %1$s</op></regex><space/>
						<getRowOid>.1.3.6.1.4.1.13742.6.3.6.3.1.4</getRowOid><space/>
						has returned to normal.
					</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags2>
		<alarmFlags2 ruleid="externalSensorValueUpperCritical-af" index=".1.3.6.1.4.1.13742.6.5.5.3.1.4">
			<rowTest>
				<eq>
				<op>
					<bitwise_and>
					<op><getRowOid>.1.3.6.1.4.1.13742.6.3.6.3.1.35</getRowOid></op>
					<op>8</op>
					</bitwise_and>
				</op>
				<op>8</op>
				</eq>
			</rowTest>
			<value>
				<if>
				<op>
					<gt>
					<op><getRowOid>.1.3.6.1.4.1.13742.6.5.5.3.1.4</getRowOid></op>
					<op><getRowOid>.1.3.6.1.4.1.13742.6.3.6.3.1.33</getRowOid></op>
					</gt>
				</op>
				<op>1</op><op>0</op>
				</if>
			</value>
			<alarmFlagsTest match="1">
				<name>
					<activeText>PDU Above Threshold Critical Alarm</activeText>
					<inactiveText>PDU Normal</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Device</category>
				<description>
					<activeText>
						<regex><op>(\d+)\.(\d+)</op><op><rowIndex/></op><op>PDU %1$s</op></regex><space/>
						<getRowOid>.1.3.6.1.4.1.13742.6.3.6.3.1.4</getRowOid><space/>
						has exceeded user-defined threshold.
					</activeText>
					<inactiveText>
						<regex><op>(\d+)\.(\d+)</op><op><rowIndex/></op><op>PDU %1$s</op></regex><space/>
						<getRowOid>.1.3.6.1.4.1.13742.6.3.6.3.1.4</getRowOid><space/>
						has returned to normal.
					</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags2>
		<alarmFlags2 ruleid="externalSensorValueUpperWarning-af" index=".1.3.6.1.4.1.13742.6.5.5.3.1.4">
			<rowTest>
				<eq>
				<op>
					<bitwise_and>
					<op><getRowOid>.1.3.6.1.4.1.13742.6.3.6.3.1.35</getRowOid></op>
					<op>4</op>
					</bitwise_and>
				</op>
				<op>4</op>
				</eq>
			</rowTest>
			<value>
				<if>
				<op>
					<and>
					<op>
						<le>
						<op><getRowOid>.1.3.6.1.4.1.13742.6.5.5.3.1.4</getRowOid></op>
						<op><getRowOid>.1.3.6.1.4.1.13742.6.3.6.3.1.33</getRowOid></op>
						</le>
					</op>
					<op>
						<gt>
						<op><getRowOid>.1.3.6.1.4.1.13742.6.5.5.3.1.4</getRowOid></op>
						<op><getRowOid>.1.3.6.1.4.1.13742.6.3.6.3.1.34</getRowOid></op>
						</gt>
					</op>
					</and>
				</op>
				<op>1</op><op>0</op>
				</if>
			</value>
			<alarmFlagsTest match="1">
				<name>
					<activeText>PDU Above Threshold Warning</activeText>
					<inactiveText>PDU Normal</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Device</category>
				<description>
					<activeText>
						<regex><op>(\d+)\.(\d+)</op><op><rowIndex/></op><op>PDU %1$s</op></regex><space/>
						<getRowOid>.1.3.6.1.4.1.13742.6.3.6.3.1.4</getRowOid><space/>
						has exceeded user-defined threshold.
					</activeText>
					<inactiveText>
						<regex><op>(\d+)\.(\d+)</op><op><rowIndex/></op><op>PDU %1$s</op></regex><space/>
						<getRowOid>.1.3.6.1.4.1.13742.6.3.6.3.1.4</getRowOid><space/>
						has returned to normal.
					</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags2>

		<!-- value & enum maps from MIB definitions for sensor status -->
		<valueMap ruleid="sensorStatus-vm">
			<valueIn>-1</valueIn><valueOut>0</valueOut> 
			<valueIn>0</valueIn><valueOut>1</valueOut> 
			<valueIn>1</valueIn><valueOut>2</valueOut> 
			<valueIn>2</valueIn><valueOut>3</valueOut> 
			<valueIn>3</valueIn><valueOut>4</valueOut>
			<valueIn>4</valueIn><valueOut>5</valueOut> 
			<valueIn>5</valueIn><valueOut>6</valueOut> 
			<valueIn>6</valueIn><valueOut>7</valueOut> 
			<valueIn>7</valueIn><valueOut>8</valueOut> 
			<valueIn>8</valueIn><valueOut>9</valueOut> 
			<valueIn>9</valueIn><valueOut>10</valueOut> 
			<valueIn>10</valueIn><valueOut>11</valueOut> 
			<valueIn>11</valueIn><valueOut>12</valueOut> 
			<valueIn>*</valueIn><valueOut>13</valueOut> 
		</valueMap>
		
		<enumMap ruleid="sensorStatus-em">
			<label>Unavailable</label>
			<label>Open</label>
			<label>Closed</label>
			<label>Below Lower Critical</label>
			<label>Below Lower Warning</label>
			<label>Normal</label>
			<label>Above Upper Warning</label>
			<label>Above Upper Critical</label>
			<label>On</label>
			<label>Off</label>
			<label>Detected</label>
			<label>Not Detected</label>
			<label>Alarmed</label>
			<label>Unknown</label>
		</enumMap>

		<stateSensor ruleid="inletSensorStatus" index=".1.3.6.1.4.1.13742.6.5.2.3.1.3">
			<type>state</type>
			<sensorId>INLET_SENSOR_STATUS_<rowIndex/></sensorId>
			<value>
				<mapValue mapid="sensorStatus-vm">
					<getRowOid>.1.3.6.1.4.1.13742.6.5.2.3.1.3</getRowOid>
				</mapValue>
			</value>
			<label>
				<!-- the three OID indexes are pduId, inletId, and sensorType; sensorType indicating Temp, Humid, etc -->
				<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>PDU %1$s Inlet %2$s</op></regex>
				<space/><mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue>
				<space/>Sensor Status
			</label>
			<enum>sensorStatus-em</enum>
			<sensorSet>
				<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>PDU %1$s Inlet %2$s</op></regex>
			</sensorSet>
		</stateSensor>

		<stateSensor ruleid="inletPoleSensorStatus" index=".1.3.6.1.4.1.13742.6.5.2.4.1.3">
			<type>state</type>
			<sensorId>INLET_POLE_SENSOR_STATUS_<rowIndex/></sensorId>
			<value>
				<mapValue mapid="sensorStatus-vm">
					<getRowOid>.1.3.6.1.4.1.13742.6.5.2.4.1.3</getRowOid>
				</mapValue>
			</value>
			<label>
				<!-- the three OID indexes are pduId, inletId, and sensorType; sensorType indicating Temp, Humid, etc -->
				<regex><op>(\d+)\.(\d+)\.\d+\.\d+</op><op><rowIndex/></op><op>PDU %1$s Inlet %2$s</op></regex><space/>
				<regex><op>\d+\.\d+\.(\d+)\.\d+</op><op><rowIndex/></op><op>Pole %1$s</op></regex><space/>
				<mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue>
				<space/>Sensor Status
			</label>
			<enum>sensorStatus-em</enum>
			<sensorSet>
				<regex><op>(\d+)\.(\d+)\.\d+\.\d+</op><op><rowIndex/></op><op>PDU %1$s Inlet %2$s</op></regex><space/>
				<regex><op>\d+\.\d+\.(\d+)\.\d+</op><op><rowIndex/></op><op>Pole %1$s</op></regex>
			</sensorSet>
		</stateSensor>

		<stateSensor ruleid="overCurrentProtectorSensorStatus" index=".1.3.6.1.4.1.13742.6.5.3.3.1.3">
			<type>state</type>
			<sensorId>OCP_SENSOR_STATUS_<rowIndex/></sensorId>
			<value>
				<mapValue mapid="sensorStatus-vm">
					<getRowOid>.1.3.6.1.4.1.13742.6.5.3.3.1.3</getRowOid>
				</mapValue>
			</value>
			<label>
				<!-- the three OID indexes are pduId, inletId, and sensorType; sensorType indicating Temp, Humid, etc -->
				<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>PDU %1$s OCP %2$s</op></regex><space/>
				<mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue>
				<space/>Sensor Status
			</label>
			<enum>sensorStatus-em</enum>
			<sensorSet>
				<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>PDU %1$s OCP %2$s</op></regex>
			</sensorSet>
		</stateSensor>
		
		<alarmFlags2 ruleid="overCurrentProtectorSensorStatus-alarm" index=".1.3.6.1.4.1.13742.6.5.3.3.1.3">
			<value><getRowOid>.1.3.6.1.4.1.13742.6.5.3.3.1.3</getRowOid></value>
			<alarmFlagsTest match="0">
				<name>
					<activeText>PDU OCP Sensor Status Alarm</activeText>
					<inactiveText>PDU OCP Sensor Status Alarm Cleared</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Power</category>
				<description>
					<activeText>
						<regex>
						<op>(\d+)\.(\d+)\.\d+</op>
						<op><rowIndex/></op>
						<op>PDU %1$s OCP %2$s</op>
						</regex><space/>
						<mapValue mapid="sensorTypeIndex-vm">
							<regex>
							<op>\d+\.\d+\.(\d+)</op>
							<op><rowIndex/></op>
							<op>%1$s</op>
							</regex>
						</mapValue><space/>is open.
					</activeText>
					<inactiveText>
						<regex>
						<op>(\d+)\.(\d+)\.\d+</op>
						<op><rowIndex/></op>
						<op>PDU %1$s OCP %2$s</op>
						</regex><space/>
						<mapValue mapid="sensorTypeIndex-vm">
							<regex>
							<op>\d+\.\d+\.(\d+)</op>
							<op><rowIndex/></op>
							<op>%1$s</op>
							</regex>
						</mapValue><space/>is no longer open.
					</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags2>

		<stateSensor ruleid="outletSensorStatus" index=".1.3.6.1.4.1.13742.6.5.4.3.1.3">
			<type>state</type>
			<sensorId>OUTLET_SENSOR_STATUS_<rowIndex/></sensorId>
			<value>
				<mapValue mapid="sensorStatus-vm">
					<getRowOid>.1.3.6.1.4.1.13742.6.5.4.3.1.3</getRowOid>
				</mapValue>
			</value>  
			<label>
				<!-- the three OID indexes are pduId, outletId, and sensorType; sensorType indicating Temp, Humid, etc -->
				<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>PDU %1$s Outlet %2$s</op></regex><space/>
				(<getOid>.1.3.6.1.4.1.13742.6.3.5.3.1.3.<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>%1$s.%2$s</op></regex></getOid>)
				<space/><mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue>
				<space/>Sensor Status
			</label>
			<enum>sensorStatus-em</enum>
			<sensorSet>
				<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>PDU %1$s Outlet %2$s</op></regex><space/>
				(<getOid>.1.3.6.1.4.1.13742.6.3.5.3.1.3.<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>%1$s.%2$s</op></regex></getOid>)
			</sensorSet>
		</stateSensor>
		<!--
		<alarmFlags2 ruleid="outletSensorStatus-alarm" index=".1.3.6.1.4.1.13742.6.5.4.3.1.3">
			<value><getRowOid>.1.3.6.1.4.1.13742.6.5.4.3.1.3</getRowOid></value>
			<alarmFlagsTest match="8">
				<name>
					<activeText>
						<regex>
						<op>(\d+)\.(\d+)\.\d+</op>
						<op><rowIndex/></op>
						<op>PDU %1$s Outlet %2$s</op>
						</regex><space/>
						<mapValue mapid="sensorTypeIndex-vm">
							<regex>
							<op>\d+\.\d+\.(\d+)</op>
							<op><rowIndex/></op>
							<op>%1$s</op>
							</regex>
						</mapValue><space/>Off
					</activeText>
					<inactiveText>
						<regex>
						<op>(\d+)\.(\d+)\.\d+</op>
						<op><rowIndex/></op>
						<op>PDU %1$s Outlet %2$s</op>
						</regex><space/>
						<mapValue mapid="sensorTypeIndex-vm">
							<regex>
							<op>\d+\.\d+\.(\d+)</op>
							<op><rowIndex/></op>
							<op>%1$s</op>
							</regex>
						</mapValue><space/>No Longer Off
					</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>
						<regex>
						<op>(\d+)\.(\d+)\.\d+</op>
						<op><rowIndex/></op>
						<op>PDU %1$s Outlet %2$s</op>
						</regex><space/>
						<mapValue mapid="sensorTypeIndex-vm">
							<regex>
							<op>\d+\.\d+\.(\d+)</op>
							<op><rowIndex/></op>
							<op>%1$s</op>
							</regex>
						</mapValue><space/>is off.
					</activeText>
					<inactiveText>
						<regex>
						<op>(\d+)\.(\d+)\.\d+</op>
						<op><rowIndex/></op>
						<op>PDU %1$s Outlet %2$s</op>
						</regex><space/>
						<mapValue mapid="sensorTypeIndex-vm">
							<regex>
							<op>\d+\.\d+\.(\d+)</op>
							<op><rowIndex/></op>
							<op>%1$s</op>
							</regex>
						</mapValue><space/>is no longer off.
					</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags2>
		-->
		<stateSensor ruleid="externalSensorStatus" index=".1.3.6.1.4.1.13742.6.5.5.3.1.3">
			<type>state</type>
			<sensorId>EXTERNAL_SENSOR_STATUS_<rowIndex/></sensorId>
			<value>
				<mapValue mapid="sensorStatus-vm">
					<getRowOid>.1.3.6.1.4.1.13742.6.5.5.3.1.3</getRowOid>
				</mapValue>
			</value>  
			<label>
				<regex><op>(\d+)\.(\d+)</op><op><rowIndex/></op><op>PDU %1$s</op></regex><space/>
				<getRowOid>.1.3.6.1.4.1.13742.6.3.6.3.1.4</getRowOid><space/>(
				<if>
					<op><eq><op><getRowOid>.1.3.6.1.4.1.13742.6.3.6.3.1.2</getRowOid></op><op>14</op></eq></op>
					<op><mapValue mapid="sensorTypeIndex-vm"><getRowOid>.1.3.6.1.4.1.13742.6.3.6.3.1.10</getRowOid></mapValue></op>
					<op><mapValue mapid="sensorTypeIndex-vm"><getRowOid>.1.3.6.1.4.1.13742.6.3.6.3.1.2</getRowOid></mapValue></op>
				</if>
				)<space/>Sensor Status
			</label>
			<enum>sensorStatus-em</enum>
			<sensorSet>
				<regex><op>(\d+)\.(\d+)</op><op><rowIndex/></op><op>PDU %1$s</op></regex><space/>External Sensors
			</sensorSet>
		</stateSensor>
		<alarmFlags2 ruleid="externalSensorStatus-alarm" index=".1.3.6.1.4.1.13742.6.5.5.3.1.3">
			<value><getRowOid>.1.3.6.1.4.1.13742.6.5.5.3.1.3</getRowOid></value>
			<alarmFlagsTest match="b"><!-- 0xb = 11 -->
				<name>
					<activeText>PDU External Sensor Alarm</activeText>
					<inactiveText>PDU External Sensor Alarm Cleared</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Device</category>
				<description>
					<activeText>
						<regex>
						<op>(\d+)\.(\d+)</op>
						<op><rowIndex/></op>
						<op>PDU %1$s</op>
						</regex><space/><getRowOid>.1.3.6.1.4.1.13742.6.3.6.3.1.4</getRowOid> is in an Alarmed state.
					</activeText>
					<inactiveText>
						<regex>
						<op>(\d+)\.(\d+)</op>
						<op><rowIndex/></op>
						<op>PDU %1$s</op>
						</regex><space/><getRowOid>.1.3.6.1.4.1.13742.6.3.6.3.1.4</getRowOid> has returned to normal.
					</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest match="1a"><!-- 0x1a = 26 -->
				<name>
					<activeText>PDU External Sensor Fault</activeText>
					<inactiveText>PDU External Sensor Fault Cleared</inactiveText>
				</name>
				<severity>failure</severity>
				<category>Fault</category>
				<description>
					<activeText>
						<regex>
						<op>(\d+)\.(\d+)</op>
						<op><rowIndex/></op>
						<op>PDU %1$s</op>
						</regex><space/><getRowOid>.1.3.6.1.4.1.13742.6.3.6.3.1.4</getRowOid> is in a Fault state.
					</activeText>
					<inactiveText>
						<regex>
						<op>(\d+)\.(\d+)</op>
						<op><rowIndex/></op>
						<op>PDU %1$s</op>
						</regex><space/><getRowOid>.1.3.6.1.4.1.13742.6.3.6.3.1.4</getRowOid> has returned to normal.
					</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest match="1b"><!-- 0x1b = 27 -->
				<name>
					<activeText>PDU External Sensor Warning</activeText>
					<inactiveText>PDU External Sensor Warning Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Device</category>
				<description>
					<activeText>
						<regex>
						<op>(\d+)\.(\d+)</op>
						<op><rowIndex/></op>
						<op>PDU %1$s</op>
						</regex><space/><getRowOid>.1.3.6.1.4.1.13742.6.3.6.3.1.4</getRowOid> is in a Warning state.
					</activeText>
					<inactiveText>
						<regex>
						<op>(\d+)\.(\d+)</op>
						<op><rowIndex/></op>
						<op>PDU %1$s</op>
						</regex><space/><getRowOid>.1.3.6.1.4.1.13742.6.3.6.3.1.4</getRowOid> has returned to normal.
					</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest match="1c"><!-- 0x1c = 28 -->
				<name>
					<activeText>PDU External Sensor Critical Alarm</activeText>
					<inactiveText>PDU External Sensor Critical Alarm</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Device</category>
				<description>
					<activeText>
						<regex>
						<op>(\d+)\.(\d+)</op>
						<op><rowIndex/></op>
						<op>PDU %1$s</op>
						</regex><space/><getRowOid>.1.3.6.1.4.1.13742.6.3.6.3.1.4</getRowOid> is in a Critical state.
					</activeText>
					<inactiveText>
						<regex>
						<op>(\d+)\.(\d+)</op>
						<op><rowIndex/></op>
						<op>PDU %1$s</op>
						</regex><space/><getRowOid>.1.3.6.1.4.1.13742.6.3.6.3.1.4</getRowOid> has returned to normal.
					</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags2>

	</device>
	
	<device deviceid="measurementsCircuit">
        <oidMustExist ruleid="measurementsCircuit_exists" oid=".1.3.6.1.4.1.13742.6.5.8" istree="yes"/>
		
		<!-- unitSensorConfigurationEntry -->
		<valueMap ruleid="sensorType">
			<valueIn>1</valueIn><valueOut>RMS Current</valueOut>
			<valueIn>2</valueIn><valueOut>Peak Current</valueOut>
			<valueIn>3</valueIn><valueOut>Unbalanced Current</valueOut>
			<valueIn>4</valueIn><valueOut>RMS Voltage</valueOut>
			<valueIn>5</valueIn><valueOut>Active Power</valueOut>
			<valueIn>6</valueIn><valueOut>Apparent Power</valueOut>
			<valueIn>7</valueIn><valueOut>Power Factor</valueOut>
			<valueIn>8</valueIn><valueOut>Active Energy</valueOut>
			<valueIn>9</valueIn><valueOut>Apparent Energy</valueOut>
			<valueIn>10</valueIn><valueOut>Temperature</valueOut>
			<valueIn>11</valueIn><valueOut>Humidity</valueOut>
			<valueIn>12</valueIn><valueOut>Air Flow</valueOut>
			<valueIn>13</valueIn><valueOut>Air Pressure</valueOut>
			<valueIn>14</valueIn><valueOut>On/Off</valueOut>
			<valueIn>15</valueIn><valueOut>Trip</valueOut>
			<valueIn>16</valueIn><valueOut>Vibration</valueOut>
			<valueIn>17</valueIn><valueOut>Water Detection</valueOut>
			<valueIn>18</valueIn><valueOut>Smoke Detection</valueOut>
			<valueIn>19</valueIn><valueOut>Binary</valueOut>
			<valueIn>20</valueIn><valueOut>Contact</valueOut>
			<valueIn>21</valueIn><valueOut>Fan Speed</valueOut>
			<valueIn>22</valueIn><valueOut>Surge Protector Status</valueOut>
			<valueIn>23</valueIn><valueOut>Frequency</valueOut>
			<valueIn>24</valueIn><valueOut>Phase Angle</valueOut>
			<valueIn>25</valueIn><valueOut>RMS Voltage LN</valueOut>
			<valueIn>26</valueIn><valueOut>Residual Current</valueOut>
			<valueIn>27</valueIn><valueOut>RCM State</valueOut>
			<valueIn>28</valueIn><valueOut>Absolute Humidity</valueOut>
			<valueIn>29</valueIn><valueOut>Reactive Power</valueOut>
			<valueIn>30</valueIn><valueOut>Other</valueOut>
			<valueIn>31</valueIn><valueOut>None</valueOut>
			<valueIn>32</valueIn><valueOut>Power Quality</valueOut>
			<valueIn>33</valueIn><valueOut>Overload Status</valueOut>
			<valueIn>34</valueIn><valueOut>Overheat Status</valueOut>
			<valueIn>35</valueIn><valueOut>Displacement Power Factor</valueOut>
			<valueIn>36</valueIn><valueOut>Residual DC Current</valueOut>
			<valueIn>37</valueIn><valueOut>Fan Status</valueOut>
			<valueIn>38</valueIn><valueOut>Inlet Phase Sync Angle</valueOut>
			<valueIn>39</valueIn><valueOut>Inlet Phase Sync</valueOut>
			<valueIn>40</valueIn><valueOut>Operating State</valueOut>
			<valueIn>41</valueIn><valueOut>Active Inlet</valueOut>
			<valueIn>42</valueIn><valueOut>Illuminance</valueOut>
			<valueIn>43</valueIn><valueOut>Door Contact</valueOut>
			<valueIn>44</valueIn><valueOut>Tamper Detection</valueOut>
			<valueIn>45</valueIn><valueOut>Motion Detection</valueOut>
			<valueIn>46</valueIn><valueOut>i1SMPS Status</valueOut>
			<valueIn>47</valueIn><valueOut>i2SMPS Status</valueOut>
			<valueIn>48</valueIn><valueOut>Switch Status</valueOut>
			<valueIn>49</valueIn><valueOut>Door Lock State</valueOut>
			<valueIn>50</valueIn><valueOut>Door Handle Lock</valueOut>
			<valueIn>*</valueIn><valueOut>Unknown</valueOut>
		</valueMap>
		
		<stateSensor ruleid="measurementsCircuitSensorIsAvailable" index=".1.3.6.1.4.1.13742.6.5.5.3.1.3">
			<type>state</type>
			<sensorId>EXTERNAL_SENSOR_STATUS_<rowIndex/></sensorId>
			<value>
				<mapValue mapid="sensorStatus-vm">
					<getRowOid>.1.3.6.1.4.1.13742.6.5.5.3.1.3</getRowOid>
				</mapValue>
			</value>  
			<label>
				<regex><op>(\d+)\.(\d+)</op><op><rowIndex/></op><op>PDU %1$s</op></regex><space/>
				<getRowOid>.1.3.6.1.4.1.13742.6.3.6.3.1.4</getRowOid><space/>(
				<if>
					<op><eq><op><getRowOid>.1.3.6.1.4.1.13742.6.3.6.3.1.2</getRowOid></op><op>14</op></eq></op>
					<op><mapValue mapid="sensorTypeIndex-vm"><getRowOid>.1.3.6.1.4.1.13742.6.3.6.3.1.10</getRowOid></mapValue></op>
					<op><mapValue mapid="sensorTypeIndex-vm"><getRowOid>.1.3.6.1.4.1.13742.6.3.6.3.1.2</getRowOid></mapValue></op>
				</if>
				)<space/>Sensor Status
			</label>
			<enum>sensorStatus-em</enum>
			<sensorSet>
				<regex><op>(\d+)\.(\d+)</op><op><rowIndex/></op><op>PDU %1$s</op></regex><space/>External Sensors
			</sensorSet>
		</stateSensor>
		
		<enumMap ruleid="true_false-em">
			<label>False</label>
			<label>True</label>
		</enumMap>
		
	</device>
	
	<device deviceid="powerMeter">
        <oidMustExist ruleid="powerMeter_exists" oid=".1.3.6.1.4.1.13742.6.3.10" istree="yes"/>
		
		<valueMap ruleid="delete_null_sensor">
			<valueIn>0</valueIn><valueOut>[false]</valueOut>
			<valueIn>*</valueIn><valueOut>[true]</valueOut>
		</valueMap>
		
		<numSensor ruleid="powerMeterPhaseCTRating">
			<!-- <rowTest>
				<mapValue mapid="delete_null_sensor">
					<getOid>.1.3.6.1.4.1.13742.6.3.10.2.1.2.1</getOid>
				</mapValue>
			</rowTest> -->
            <type>amperage</type>
            <sensorId>PHASE_CT_RATING</sensorId>
            <value>
                <getOid>.1.3.6.1.4.1.13742.6.3.10.2.1.2.1</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>Phase CT Rating</label>
            <sensorSet>Power Meter</sensorSet>
        </numSensor>
		<numSensor ruleid="powerMeterNeutralCTRating">
			<!-- <rowTest>
				<mapValue mapid="delete_null_sensor">
					<getOid>.1.3.6.1.4.1.13742.6.3.10.2.1.3.1</getOid>
				</mapValue>
			</rowTest> -->
            <type>amperage</type>
            <sensorId>NEUTRAL_CT_RATING</sensorId>
            <value>
                <getOid>.1.3.6.1.4.1.13742.6.3.10.2.1.3.1</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>Neutral CT Rating</label>
            <sensorSet>Power Meter</sensorSet>
        </numSensor>
		<numSensor ruleid="powerMeterEarthCTRating">
			<!-- <rowTest>
				<mapValue mapid="delete_null_sensor">
					<getOid>.1.3.6.1.4.1.13742.6.3.10.2.1.4.1</getOid>
				</mapValue>
			</rowTest> -->
            <type>amperage</type>
            <sensorId>EARTH_CT_RATING</sensorId>
            <value>
                <getOid>.1.3.6.1.4.1.13742.6.3.10.2.1.4.1</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>Earth CT Rating</label>
            <sensorSet>Power Meter</sensorSet>
        </numSensor>
		
	</device>
	
	<device deviceid="circuit">
        <oidMustExist ruleid="circuit_exists" oid=".1.3.6.1.4.1.13742.6.3.11" istree="yes"/>
		
		<stateSensor ruleid="circuitType" index=".1.3.6.1.4.1.13742.6.3.11.2.1.4">
            <type>state</type>
            <sensorId>CIRCUIT_TYPE_<rowIndex/></sensorId>
            <value>
                <mapValue mapid="4state-vm">
					<getRowOid>.1.3.6.1.4.1.13742.6.3.11.2.1.4</getRowOid>
				</mapValue>
            </value>
            <label>
				<!-- the OID indexes are pduId and circuitId -->
				<regex><op>(\d+)\.(\d+)</op><op><rowIndex/></op><op>PDU %1$s Circuit %2$s</op></regex><space/>
				(<getRowOid>.1.3.6.1.4.1.13742.6.3.11.2.1.3</getRowOid>) Type
			</label>
			<enum>circuitType-em</enum>
            <sensorSet>
				<regex><op>(\d+)\.(\d+)</op><op><rowIndex/></op><op>PDU %1$s Circuit %2$s</op></regex>
			</sensorSet>
        </stateSensor>

		<valueMap ruleid="4state-vm">
			<valueIn>*</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>2</valueIn><valueOut>2</valueOut>
			<valueIn>3</valueIn><valueOut>3</valueOut>
			<valueIn>4</valueIn><valueOut>4</valueOut>
		</valueMap>

		<enumMap ruleid="circuitType-em">
			<label>Unknown</label>
			<label>One Phase LL</label>
			<label>One Phase LN</label>
			<label>One Phase LLN</label>
			<label>Three Phase</label>
		</enumMap>
		
		<numSensor ruleid="circuitRatedCurrent" index=".1.3.6.1.4.1.13742.6.3.11.2.1.5">
            <type>amperage</type>
            <sensorId>CIRCUIT_RATED_CURRENT_<rowIndex/></sensorId>
            <value>
                <getRowOid>.1.3.6.1.4.1.13742.6.3.11.2.1.5</getRowOid>
            </value>
			<valueInc>1</valueInc>
            <label>
				<!-- the OID indexes are pduId and circuitId -->
				<regex><op>(\d+)\.(\d+)</op><op><rowIndex/></op><op>PDU %1$s Circuit %2$s</op></regex><space/>
				(<getRowOid>.1.3.6.1.4.1.13742.6.3.11.2.1.3</getRowOid>) Rated Current
			</label> 
            <sensorSet>
				<regex><op>(\d+)\.(\d+)</op><op><rowIndex/></op><op>PDU %1$s Circuit %2$s</op></regex>
			</sensorSet>
        </numSensor>
		<numSensor ruleid="circuitCTRating" index=".1.3.6.1.4.1.13742.6.3.11.2.1.6">
            <type>amperage</type>
            <sensorId>CIRCUIT_CT_RATING_<rowIndex/></sensorId>
            <value>
                <getRowOid>.1.3.6.1.4.1.13742.6.3.11.2.1.6</getRowOid>
            </value>
			<valueInc>1</valueInc>
            <label>
				<!-- the OID indexes are pduId and circuitId -->
				<regex><op>(\d+)\.(\d+)</op><op><rowIndex/></op><op>PDU %1$s Circuit %2$s</op></regex><space/>
				(<getRowOid>.1.3.6.1.4.1.13742.6.3.11.2.1.3</getRowOid>) CT Rating
			</label> 
            <sensorSet>
				<regex><op>(\d+)\.(\d+)</op><op><rowIndex/></op><op>PDU %1$s Circuit %2$s</op></regex>
			</sensorSet>
        </numSensor>
		
		<valueMap ruleid="circuitSensorID-vm">
			<valueIn>2</valueIn><valueOut>_TOTAL_BANK_CURRENT</valueOut> 
			<valueIn>3</valueIn><valueOut>_OUTPUT_POWER_TOTAL</valueOut>
			<valueIn>4</valueIn><valueOut>_OUTPUT_APPARENT_POWER_TOTAL</valueOut> 
			<valueIn>5</valueIn><valueOut>_OUTPUT_ENERGY_TOTAL_1</valueOut> 
			<valueIn>*</valueIn><valueOut>_CIRCUIT_SENSOR_VALUE</valueOut> 
		</valueMap>
		
		<valueMap ruleid="sensorTypeIndex-vm">
			<valueIn>1</valueIn><valueOut>RMS Current</valueOut> 
			<valueIn>2</valueIn><valueOut>Peak Current</valueOut> 
			<valueIn>3</valueIn><valueOut>Unbalanced Current</valueOut> 
			<valueIn>4</valueIn><valueOut>RMS Voltage</valueOut> 
			<valueIn>5</valueIn><valueOut>Active Power</valueOut>
			<valueIn>6</valueIn><valueOut>Apparent Power</valueOut> 
			<valueIn>7</valueIn><valueOut>Power Factor</valueOut> 
			<valueIn>8</valueIn><valueOut>Active Energy</valueOut> 
			<valueIn>9</valueIn><valueOut>Apparent Energy</valueOut> 
			<valueIn>10</valueIn><valueOut>Temperature</valueOut> 
			<valueIn>11</valueIn><valueOut>Humidity</valueOut> 
			<valueIn>12</valueIn><valueOut>Air Flow</valueOut> 
			<valueIn>13</valueIn><valueOut>Air Pressure</valueOut> 
			<valueIn>14</valueIn><valueOut>On-Off</valueOut> 
			<valueIn>15</valueIn><valueOut>Trip</valueOut> 
			<valueIn>16</valueIn><valueOut>Vibration</valueOut> 
			<valueIn>17</valueIn><valueOut>Water Detection</valueOut> 
			<valueIn>18</valueIn><valueOut>Smoke Detection</valueOut>
			<valueIn>19</valueIn><valueOut>Binary</valueOut> 
			<valueIn>20</valueIn><valueOut>Contact</valueOut> 
			<valueIn>21</valueIn><valueOut>Fan Speed</valueOut> 
			<valueIn>22</valueIn><valueOut>Surge Protector Status</valueOut> 
			<valueIn>23</valueIn><valueOut>Frequency</valueOut> 
			<valueIn>24</valueIn><valueOut>Phase Angle</valueOut> 
			<valueIn>25</valueIn><valueOut>RMS Voltage L-N</valueOut> 
			<valueIn>26</valueIn><valueOut>Residual Current</valueOut> 
			<valueIn>27</valueIn><valueOut>RCM State</valueOut> 
			<valueIn>*</valueIn><valueOut>Unknown</valueOut> 
		</valueMap>
		
		<numSensor ruleid="measurementsCircuitSensorValue" index=".1.3.6.1.4.1.13742.6.5.8.3.1.4">
			<type><mapValue mapid="raritan_pdu2/sensorType-vm"><getRowOid>.1.3.6.1.4.1.13742.6.3.11.4.1.6</getRowOid></mapValue></type>
			<!-- the units will be ignored, unless type=num -->
			<units><mapValue mapid="raritan_pdu2/sensorUnits-vm"><getRowOid>.1.3.6.1.4.1.13742.6.3.11.4.1.6</getRowOid></mapValue></units>
			<sensorId>
				0<rowNumber/>
				<mapValue mapid="circuitSensorID-vm">
				<getRowOid>.1.3.6.1.4.1.13742.6.3.11.4.1.6</getRowOid>
				</mapValue>
			</sensorId>
			<rowTest>
				<mapValue mapid="raritan_pdu2/isSensorAvailable-vm"><getRowOid>.1.3.6.1.4.1.13742.6.5.8.3.1.2</getRowOid></mapValue>
			</rowTest>
			<value>
				<!-- first mult & sub are used to convert to units expected by botzware  -->
				<mult>
					<op>
						<sub>
							<op>
								<!-- adjust device value scaling, based on scaling data provided by device -->
								<mult>
									<op>
										<!-- MIB specifies # of decimals for each value -->
										<mapValue mapid="raritan_pdu2/sensorScaling-vm"><getRowOid>.1.3.6.1.4.1.13742.6.3.11.4.1.7</getRowOid></mapValue>
									</op>
									<op>
										<getRowOid>.1.3.6.1.4.1.13742.6.5.8.3.1.4</getRowOid>
									</op>
								</mult>
							</op> 
							<op>
								<mapValue mapid="raritan_pdu2/sensorSubtract-vm"><getRowOid>.1.3.6.1.4.1.13742.6.3.11.4.1.6</getRowOid></mapValue>
							</op>
						</sub>
					</op>
					<op>
						<mapValue mapid="raritan_pdu2/sensorMultiply-vm"><getRowOid>.1.3.6.1.4.1.13742.6.3.11.4.1.6</getRowOid></mapValue>
					</op>
				</mult>
			</value>
			<label>
				<!-- the three OID indexes are pduId, circuitId, and sensorType; sensorType indicating Temp, Humid, etc -->
				<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>PDU %1$s Circuit %2$s</op></regex><space/>
				(<getOid>.1.3.6.1.4.1.13742.6.3.11.2.1.3.<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>%1$s.%2$s</op></regex></getOid>)
				<space/><mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue>
			</label>
			<sensorSet>
				<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>PDU %1$s Circuit %2$s</op></regex>
			</sensorSet>
		</numSensor>
		
		<alarmFlags2 ruleid="circuitSensorLowerCriticalThreshold-af" index=".1.3.6.1.4.1.13742.6.5.8.3.1.4">
			<rowTest>
				<eq>
				<op>
					<bitwise_and>
						<!-- circuitSensorEnabledThresholds -->
					<op><getRowOid>.1.3.6.1.4.1.13742.6.3.11.4.1.25</getRowOid></op>
					<op>1</op>
					</bitwise_and>
				</op>
				<op>1</op>
				</eq>
			</rowTest>
			<value>
				<if>
				<op>
					<lt>
						<!-- measurementsCircuitSensorValue -->
					<op><getRowOid>.1.3.6.1.4.1.13742.6.5.8.3.1.4</getRowOid></op>
						<!-- circuitSensorLowerCriticalThreshold -->
					<op><getRowOid>.1.3.6.1.4.1.13742.6.3.11.4.1.21</getRowOid></op>
					</lt>
				</op>
				<!-- alarm -->
				<op>1</op>
				<!-- no alarm -->
				<op>0</op>
				</if>
			</value>
			<alarmFlagsTest match="1">
				<name>
					<activeText>PDU - Circuit Sensor Below Threshold Critical Alarm</activeText>
					<inactiveText>PDU - Circuit Sensor Normal</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Power</category>
				<description>
					<activeText>
						<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>PDU %1$s Circuit %2$s</op></regex><space/>
						<mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue><space/>
						has fallen below user-defined threshold.
					</activeText>
					<inactiveText>
						<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>PDU %1$s Circuit %2$s</op></regex><space/>
						<mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue><space/>
						has returned to normal.
					</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags2>
		<alarmFlags2 ruleid="circuitSensorLowerWarningThreshold-af" index=".1.3.6.1.4.1.13742.6.5.8.3.1.4">
			<rowTest>
				<eq>
				<op>
					<bitwise_and>
						<!-- circuitSensorEnabledThresholds -->
					<op><getRowOid>.1.3.6.1.4.1.13742.6.3.11.4.1.25</getRowOid></op>
					<op>2</op>
					</bitwise_and>
				</op>
				<op>2</op>
				</eq>
			</rowTest>
			<value>
				<if>
				<op>
					<and>
					<op>
						<ge>
							<!-- measurementsCircuitSensorValue -->
						<op><getRowOid>.1.3.6.1.4.1.13742.6.5.8.3.1.4</getRowOid></op>
							<!-- circuitSensorLowerCriticalThreshold -->
						<op><getRowOid>.1.3.6.1.4.1.13742.6.3.11.4.1.21</getRowOid></op>
						</ge>
					</op>
					<op>
						<lt>
							<!-- measurementsCircuitSensorValue -->
						<op><getRowOid>.1.3.6.1.4.1.13742.6.5.8.3.1.4</getRowOid></op>
							<!-- circuitSensorLowerWarningThreshold -->
						<op><getRowOid>.1.3.6.1.4.1.13742.6.3.11.4.1.22</getRowOid></op>
						</lt>
					</op>
					</and>
				</op>
				<!-- alarm -->
				<op>1</op>
				<!-- no alarm -->
				<op>0</op>
				</if>
			</value>
			<alarmFlagsTest match="1">
				<name>
					<activeText>PDU - Circuit Sensor Below Threshold Warning</activeText>
					<inactiveText>PDU - Circuit Sensor Normal</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Power</category>
				<description>
					<activeText>
						<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>PDU %1$s Circuit %2$s</op></regex><space/>
						<mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue><space/>
						has fallen below user-defined threshold.
					</activeText>
					<inactiveText>
						<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>PDU %1$s Circuit %2$s</op></regex><space/>
						<mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue><space/>
						has returned to normal.
					</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags2>

		<alarmFlags2 ruleid="circuitSensorUpperCriticalThreshold-af" index=".1.3.6.1.4.1.13742.6.5.8.3.1.4">
			<rowTest>
				<eq>
				<op>
					<bitwise_and>
						<!-- circuitSensorEnabledThresholds -->
					<op><getRowOid>.1.3.6.1.4.1.13742.6.3.11.4.1.25</getRowOid></op>
					<op>8</op>
					</bitwise_and>
				</op>
				<op>8</op>
				</eq>
			</rowTest>
			<value>
				<if>
				<op>
					<gt>
						<!-- measurementsCircuitSensorValue -->
					<op><getRowOid>.1.3.6.1.4.1.13742.6.5.8.3.1.4</getRowOid></op>
						<!-- circuitSensorUpperCriticalThreshold -->
					<op><getRowOid>.1.3.6.1.4.1.13742.6.3.11.4.1.23</getRowOid></op>
					</gt>
				</op>
				<!-- alarm -->
				<op>1</op>
				<!-- no alarm -->
				<op>0</op>
				</if>
			</value>
			<alarmFlagsTest match="1">
				<name>
					<activeText>PDU - Circuit Sensor Above Threshold Critical Alarm</activeText>
					<inactiveText>PDU - Circuit Sensor Normal</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Power</category>
				<description>
					<activeText>
						<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>PDU %1$s Circuit %2$s</op></regex><space/>
						<mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue><space/>
						has exceeded user-defined threshold.
					</activeText>
					<inactiveText>
						<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>PDU %1$s Circuit %2$s</op></regex><space/>
						<mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue><space/>
						has returned to normal.
					</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags2>
		<alarmFlags2 ruleid="circuitSensorUpperWarningThreshold-af" index=".1.3.6.1.4.1.13742.6.5.8.3.1.4">
			<rowTest>
				<eq>
				<op>
					<bitwise_and>
						<!-- circuitSensorEnabledThresholds -->
					<op><getRowOid>.1.3.6.1.4.1.13742.6.3.11.4.1.25</getRowOid></op>
					<op>4</op>
					</bitwise_and>
				</op>
				<op>4</op>
				</eq>
			</rowTest>
			<value>
				<if>
				<op>
					<and>
					<op>
						<le> 
							<!-- measurementsCircuitSensorValue -->
						<op><getRowOid>.1.3.6.1.4.1.13742.6.5.8.3.1.4</getRowOid></op>
							<!-- circuitSensorUpperCriticalThreshold -->
						<op><getRowOid>.1.3.6.1.4.1.13742.6.3.11.4.1.23</getRowOid></op>
						</le>
					</op>
					<op>
						<gt>
							<!-- measurementsCircuitSensorValue --> 
						<op><getRowOid>.1.3.6.1.4.1.13742.6.5.8.3.1.4</getRowOid></op>
							<!-- circuitSensorUpperWarningThreshold -->
						<op><getRowOid>.1.3.6.1.4.1.13742.6.3.11.4.1.24</getRowOid></op>
						</gt>
					</op>
					</and>
				</op>
				<!-- alarm -->
				<op>1</op>
				<!-- no alarm -->
				<op>0</op>
				</if>
			</value>
			<alarmFlagsTest match="1">
				<name>
					<activeText>PDU - Circuit Sensor Above Threshold Warning</activeText>
					<inactiveText>PDU - Circuit Sensor Normal</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Power</category>
				<description>
					<activeText>
						<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>PDU %1$s Circuit %2$s</op></regex><space/>
						<mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue><space/>
						has exceeded user-defined threshold.
					</activeText>
					<inactiveText>
						<regex><op>(\d+)\.(\d+)\.\d+</op><op><rowIndex/></op><op>PDU %1$s Circuit %2$s</op></regex><space/>
						<mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue><space/>
						has returned to normal.
					</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags2>
		
		<numSensor ruleid="measurementsCircuitPoleSensorValue" index=".1.3.6.1.4.1.13742.6.5.8.4.1.4">
			<type><mapValue mapid="raritan_pdu2/sensorType-vm"><getRowOid>.1.3.6.1.4.1.13742.6.3.11.6.1.6</getRowOid></mapValue></type>
			<!-- the units will be ignored, unless type=num -->
			<units><mapValue mapid="raritan_pdu2/sensorUnits-vm"><getRowOid>.1.3.6.1.4.1.13742.6.3.11.6.1.6</getRowOid></mapValue></units>
			<sensorId>
				00<rowNumber/>
				<mapValue mapid="circuitSensorID-vm">
				<getRowOid>.1.3.6.1.4.1.13742.6.3.11.6.1.6</getRowOid>
				</mapValue>
			</sensorId>
			<rowTest>
				<mapValue mapid="raritan_pdu2/isSensorAvailable-vm"><getRowOid>.1.3.6.1.4.1.13742.6.5.8.4.1.2</getRowOid></mapValue>
			</rowTest>
			<value>
				<!-- first mult & sub are used to convert to units expected by botzware  -->
				<mult>
					<op>
						<sub>
							<op>
								<!-- adjust device value scaling, based on scaling data provided by device -->
								<mult>
									<op>
										<!-- MIB specifies # of decimals for each value -->
										<mapValue mapid="raritan_pdu2/sensorScaling-vm"><getRowOid>.1.3.6.1.4.1.13742.6.3.11.6.1.7</getRowOid></mapValue>
									</op>
									<op>
										<getRowOid>.1.3.6.1.4.1.13742.6.5.8.4.1.4</getRowOid>
									</op>
								</mult>
							</op> 
							<op>
								<mapValue mapid="raritan_pdu2/sensorSubtract-vm"><getRowOid>.1.3.6.1.4.1.13742.6.3.11.6.1.6</getRowOid></mapValue>
							</op>
						</sub>
					</op>
					<op>
						<mapValue mapid="raritan_pdu2/sensorMultiply-vm"><getRowOid>.1.3.6.1.4.1.13742.6.3.11.6.1.6</getRowOid></mapValue>
					</op>
				</mult>
			</value>
			<label>
				<!-- the three OID indexes are pduId, circuitId, and sensorType; sensorType indicating Temp, Humid, etc -->
				<regex><op>(\d+)\.(\d+)\.\d+\.\d+</op><op><rowIndex/></op><op>PDU %1$s Circuit %2$s</op></regex><space/>
				<regex><op>\d+\.\d+\.(\d+)\.\d+</op><op><rowIndex/></op><op>Pole %1$s</op></regex><space/>
				<mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue>
			</label>
			<sensorSet>
				<regex><op>(\d+)\.(\d+)\.\d+\.\d+</op><op><rowIndex/></op><op>PDU %1$s Circuit %2$s</op></regex><space/>
				<regex><op>\d+\.\d+\.(\d+)\.\d+</op><op><rowIndex/></op><op>Pole %1$s</op></regex>
			</sensorSet>
		</numSensor>
		
		<alarmFlags2 ruleid="circuitPoleSensorLowerCriticalThreshold-af" index=".1.3.6.1.4.1.13742.6.5.8.4.1.4">
			<rowTest>
				<eq>
				<op>
					<bitwise_and>
						<!-- circuitPoleSensorEnabledThresholds -->
					<op><getRowOid>.1.3.6.1.4.1.13742.6.3.11.6.1.25</getRowOid></op>
					<op>1</op>
					</bitwise_and>
				</op>
				<op>1</op>
				</eq>
			</rowTest>
			<value>
				<if>
				<op>
					<lt>
						<!-- measurementsCircuitPoleSensorValue -->
					<op><getRowOid>.1.3.6.1.4.1.13742.6.5.8.4.1.4</getRowOid></op>
						<!-- circuitPoleSensorLowerCriticalThreshold -->
					<op><getRowOid>.1.3.6.1.4.1.13742.6.3.11.6.1.21</getRowOid></op>
					</lt>
				</op>
				<!-- alarm -->
				<op>1</op>
				<!-- no alarm -->
				<op>0</op>
				</if>
			</value>
			<alarmFlagsTest match="1">
				<name>
					<activeText>PDU - Circuit Pole Sensor Below Threshold Critical Alarm</activeText>
					<inactiveText>PDU - Circuit Pole Sensor Normal</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Power</category>
				<description>
					<activeText>
						<regex><op>(\d+)\.(\d+)\.\d+\.\d+</op><op><rowIndex/></op><op>PDU %1$s Circuit %2$s</op></regex><space/>
						<regex><op>\d+\.\d+\.(\d+)\.\d+</op><op><rowIndex/></op><op>Pole %1$s</op></regex><space/>
						<mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue><space/>
						has fallen below user-defined threshold.
					</activeText>
					<inactiveText>
						<regex><op>(\d+)\.(\d+)\.\d+\.\d+</op><op><rowIndex/></op><op>PDU %1$s Circuit %2$s</op></regex><space/>
						<regex><op>\d+\.\d+\.(\d+)\.\d+</op><op><rowIndex/></op><op>Pole %1$s</op></regex><space/>
						<mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue><space/>
						has returned to normal.
					</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags2>
		<alarmFlags2 ruleid="circuitPoleSensorLowerWarningThreshold-af" index=".1.3.6.1.4.1.13742.6.5.8.4.1.4">
			<rowTest>
				<eq>
				<op>
					<bitwise_and>
						<!-- circuitPoleSensorEnabledThresholds -->
					<op><getRowOid>.1.3.6.1.4.1.13742.6.3.11.6.1.25</getRowOid></op>
					<op>2</op>
					</bitwise_and>
				</op>
				<op>2</op>
				</eq>
			</rowTest>
			<value>
				<if>
				<op>
					<and>
					<op>
						<ge>
							<!-- measurementsCircuitPoleSensorValue -->
						<op><getRowOid>.1.3.6.1.4.1.13742.6.5.8.4.1.4</getRowOid></op>
							<!-- circuitPoleSensorLowerCriticalThreshold -->
						<op><getRowOid>.1.3.6.1.4.1.13742.6.3.11.6.1.21</getRowOid></op>
						</ge>
					</op>
					<op>
						<lt>
							<!-- measurementsCircuitPoleSensorValue -->
						<op><getRowOid>.1.3.6.1.4.1.13742.6.5.8.4.1.4</getRowOid></op>
							<!-- circuitPoleSensorLowerWarningThreshold -->
						<op><getRowOid>.1.3.6.1.4.1.13742.6.3.11.6.1.22</getRowOid></op>
						</lt>
					</op>
					</and>
				</op>
				<!-- alarm -->
				<op>1</op>
				<!-- no alarm -->
				<op>0</op>
				</if>
			</value>
			<alarmFlagsTest match="1">
				<name>
					<activeText>PDU - Circuit Pole Sensor Below Threshold Warning</activeText>
					<inactiveText>PDU - Circuit Pole Sensor Normal</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Power</category>
				<description>
					<activeText>
						<regex><op>(\d+)\.(\d+)\.\d+\.\d+</op><op><rowIndex/></op><op>PDU %1$s Circuit %2$s</op></regex><space/>
						<regex><op>\d+\.\d+\.(\d+)\.\d+</op><op><rowIndex/></op><op>Pole %1$s</op></regex><space/>
						<mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue><space/>
						has fallen below user-defined threshold.
					</activeText>
					<inactiveText>
						<regex><op>(\d+)\.(\d+)\.\d+\.\d+</op><op><rowIndex/></op><op>PDU %1$s Circuit %2$s</op></regex><space/>
						<regex><op>\d+\.\d+\.(\d+)\.\d+</op><op><rowIndex/></op><op>Pole %1$s</op></regex><space/>
						<mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue><space/>
						has returned to normal.
					</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags2>
		<alarmFlags2 ruleid="circuitPoleSensorUpperCriticalThreshold-af" index=".1.3.6.1.4.1.13742.6.5.8.4.1.4">
			<rowTest>
				<eq>
				<op>
					<bitwise_and>
						<!-- circuitPoleSensorEnabledThresholds -->
					<op><getRowOid>.1.3.6.1.4.1.13742.6.3.11.6.1.25</getRowOid></op>
					<op>8</op>
					</bitwise_and>
				</op>
				<op>8</op>
				</eq>
			</rowTest>
			<value>
				<if>
				<op>
					<gt>
						<!-- measurementsCircuitPoleSensorValue -->
					<op><getRowOid>.1.3.6.1.4.1.13742.6.5.8.4.1.4</getRowOid></op>
						<!-- circuitPoleSensorUpperCriticalThreshold -->
					<op><getRowOid>.1.3.6.1.4.1.13742.6.3.11.6.1.23</getRowOid></op>
					</gt>
				</op>
				<!-- alarm -->
				<op>1</op>
				<!-- no alarm -->
				<op>0</op>
				</if>
			</value>
			<alarmFlagsTest match="1">
				<name>
					<activeText>PDU - Circuit Pole Sensor Above Threshold Critical Alarm</activeText>
					<inactiveText>PDU - Circuit Pole Sensor Normal</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Power</category>
				<description>
					<activeText>
						<regex><op>(\d+)\.(\d+)\.\d+\.\d+</op><op><rowIndex/></op><op>PDU %1$s Circuit %2$s</op></regex><space/>
						<regex><op>\d+\.\d+\.(\d+)\.\d+</op><op><rowIndex/></op><op>Pole %1$s</op></regex><space/>
						<mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue><space/>
						has exceeded user-defined threshold.
					</activeText>
					<inactiveText>
						<regex><op>(\d+)\.(\d+)\.\d+\.\d+</op><op><rowIndex/></op><op>PDU %1$s Circuit %2$s</op></regex><space/>
						<regex><op>\d+\.\d+\.(\d+)\.\d+</op><op><rowIndex/></op><op>Pole %1$s</op></regex><space/>
						<mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue><space/>
						has returned to normal.
					</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags2>
		<alarmFlags2 ruleid="circuitPoleSensorUpperWarningThreshold-af" index=".1.3.6.1.4.1.13742.6.5.8.4.1.4">
			<rowTest>
				<eq>
				<op>
					<bitwise_and>
						<!-- circuitPoleSensorEnabledThresholds -->
					<op><getRowOid>.1.3.6.1.4.1.13742.6.3.11.6.1.25</getRowOid></op>
					<op>4</op>
					</bitwise_and>
				</op>
				<op>4</op>
				</eq>
			</rowTest>
			<value>
				<if>
				<op>
					<and>
					<op>
						<le> 
							<!-- measurementsCircuitPoleSensorValue -->
						<op><getRowOid>.1.3.6.1.4.1.13742.6.5.8.4.1.4</getRowOid></op>
							<!-- circuitPoleSensorUpperCriticalThreshold -->
						<op><getRowOid>.1.3.6.1.4.1.13742.6.3.11.6.1.23</getRowOid></op>
						</le>
					</op>
					<op>
						<gt>
							<!-- measurementsCircuitPoleSensorValue --> 
						<op><getRowOid>.1.3.6.1.4.1.13742.6.5.8.4.1.4</getRowOid></op>
							<!-- circuitPoleSensorUpperWarningThreshold -->
						<op><getRowOid>.1.3.6.1.4.1.13742.6.3.11.6.1.24</getRowOid></op>
						</gt>
					</op>
					</and>
				</op>
				<!-- alarm -->
				<op>1</op>
				<!-- no alarm -->
				<op>0</op>
				</if>
			</value>
			<alarmFlagsTest match="1">
				<name>
					<activeText>PDU - Circuit Pole Sensor Above Threshold Warning</activeText>
					<inactiveText>PDU - Circuit Pole Sensor Normal</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Power</category>
				<description>
					<activeText>
						<regex><op>(\d+)\.(\d+)\.\d+\.\d+</op><op><rowIndex/></op><op>PDU %1$s Circuit %2$s</op></regex><space/>
						<regex><op>\d+\.\d+\.(\d+)\.\d+</op><op><rowIndex/></op><op>Pole %1$s</op></regex><space/>
						<mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue><space/>
						has exceeded user-defined threshold.
					</activeText>
					<inactiveText>
						<regex><op>(\d+)\.(\d+)\.\d+\.\d+</op><op><rowIndex/></op><op>PDU %1$s Circuit %2$s</op></regex><space/>
						<regex><op>\d+\.\d+\.(\d+)\.\d+</op><op><rowIndex/></op><op>Pole %1$s</op></regex><space/>
						<mapValue mapid="sensorTypeIndex-vm"><regex><op>\d+\.\d+\.\d+\.(\d+)</op><op><rowIndex/></op><op>%1$s</op></regex></mapValue><space/>
						has returned to normal.
					</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags2>
		
	</device>
</APC_DDF>
